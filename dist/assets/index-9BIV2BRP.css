[type='text'],
[type='email'],
[type='url'],
[type='password'],
[type='number'],
[type='date'],
[type='datetime-local'],
[type='month'],
[type='search'],
[type='tel'],
[type='time'],
[type='week'],
[multiple],
textarea,
select {
	-webkit-appearance: none;
	-moz-appearance: none;
	appearance: none;
	background-color: #fff;
	border-color: #64748b;
	border-width: 1px;
	border-radius: 0;
	padding: 0.5rem 0.75rem;
	font-size: 1rem;
	line-height: 1.5rem;
}
[type='text']:focus,
[type='email']:focus,
[type='url']:focus,
[type='password']:focus,
[type='number']:focus,
[type='date']:focus,
[type='datetime-local']:focus,
[type='month']:focus,
[type='search']:focus,
[type='tel']:focus,
[type='time']:focus,
[type='week']:focus,
[multiple]:focus,
textarea:focus,
select:focus {
	--tw-ring-inset: var(--tw-empty);
	--tw-ring-offset-width: 0px;
	--tw-ring-offset-color: #fff;
	--tw-ring-color: #0284c7;
	--tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0
		var(--tw-ring-offset-width) var(--tw-ring-offset-color);
	--tw-ring-shadow: var(--tw-ring-inset) 0 0 0
		calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
	box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
		var(--tw-shadow, 0 0 #0000);
	border-color: #0284c7;
}
[type='checkbox'],
[type='radio'] {
	-webkit-appearance: none;
	-moz-appearance: none;
	appearance: none;
	padding: 0;
	-webkit-print-color-adjust: exact;
	print-color-adjust: exact;
	display: inline-block;
	vertical-align: middle;
	background-origin: border-box;
	-webkit-user-select: none;
	-moz-user-select: none;
	-ms-user-select: none;
	user-select: none;
	flex-shrink: 0;
	height: 1rem;
	width: 1rem;
	color: #0284c7;
	background-color: #fff;
	border-color: #64748b;
	border-width: 1px;
}
[type='checkbox']:focus,
[type='radio']:focus {
	--tw-ring-inset: var(--tw-empty);
	--tw-ring-offset-width: 2px;
	--tw-ring-offset-color: #fff;
	--tw-ring-color: #0284c7;
	--tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0
		var(--tw-ring-offset-width) var(--tw-ring-offset-color);
	--tw-ring-shadow: var(--tw-ring-inset) 0 0 0
		calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
	box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
		var(--tw-shadow, 0 0 #0000);
	border-color: #64748b;
}
[type='checkbox']:checked,
[type='radio']:checked {
	border-color: transparent;
	background-color: currentColor;
	background-size: 100% 100%;
	background-position: center;
	background-repeat: no-repeat;
}
[type='checkbox']:checked:hover,
[type='checkbox']:checked:focus,
[type='radio']:checked:hover,
[type='radio']:checked:focus {
	border-color: transparent;
	background-color: currentColor;
}
[type='checkbox']:indeterminate:hover,
[type='checkbox']:indeterminate:focus {
	border-color: transparent;
	background-color: currentColor;
}
*,
:before,
:after {
	-webkit-box-sizing: border-box;
	box-sizing: border-box;
	border-width: 0;
	border-style: solid;
	border-color: #e2e8f0;
}
* {
	--tw-ring-inset: var(--tw-empty);
	--tw-ring-offset-width: 0px;
	--tw-ring-offset-color: #fff;
	--tw-ring-color: rgba(14, 165, 233, 0.5);
	--tw-ring-offset-shadow: 0 0 #0000;
	--tw-ring-shadow: 0 0 #0000;
	--tw-shadow: 0 0 #0000;
}
:root {
	-moz-tab-size: 4;
	-o-tab-size: 4;
	tab-size: 4;
}
:-moz-focusring {
	outline: 1px dotted ButtonText;
}
:-moz-ui-invalid {
	box-shadow: none;
}
:root,
[data-theme] {
	background-color: var(--fallback-b1, oklch(var(--b1) / 1));
	color: var(--fallback-bc, oklch(var(--bc) / 1));
}
@supports not (color: oklch(0 0 0)) {
	:root {
		color-scheme: light;
		--fallback-p: #491eff;
		--fallback-pc: #d4dbff;
		--fallback-s: #ff41c7;
		--fallback-sc: #fff9fc;
		--fallback-a: #00cfbd;
		--fallback-ac: #00100d;
		--fallback-n: #2b3440;
		--fallback-nc: #d7dde4;
		--fallback-b1: #ffffff;
		--fallback-b2: #e5e6e6;
		--fallback-b3: #e5e6e6;
		--fallback-bc: #1f2937;
		--fallback-in: #00b3f0;
		--fallback-inc: #000000;
		--fallback-su: #00ca92;
		--fallback-suc: #000000;
		--fallback-wa: #ffc22d;
		--fallback-wac: #000000;
		--fallback-er: #ff6f70;
		--fallback-erc: #000000;
	}
	@media (prefers-color-scheme: dark) {
		:root {
			color-scheme: dark;
			--fallback-p: #7582ff;
			--fallback-pc: #050617;
			--fallback-s: #ff71cf;
			--fallback-sc: #190211;
			--fallback-a: #00c7b5;
			--fallback-ac: #000e0c;
			--fallback-n: #2a323c;
			--fallback-nc: #a6adbb;
			--fallback-b1: #1d232a;
			--fallback-b2: #191e24;
			--fallback-b3: #15191e;
			--fallback-bc: #a6adbb;
			--fallback-in: #00b3f0;
			--fallback-inc: #000000;
			--fallback-su: #00ca92;
			--fallback-suc: #000000;
			--fallback-wa: #ffc22d;
			--fallback-wac: #000000;
			--fallback-er: #ff6f70;
			--fallback-erc: #000000;
		}
	}
}
:root {
	color-scheme: light;
	--in: 0.7206 0.191 231.6;
	--su: 64.8% 0.15 160;
	--wa: 0.8471 0.199 83.87;
	--er: 0.7176 0.221 22.18;
	--pc: 0.89824 0.06192 275.75;
	--ac: 0.15352 0.0368 183.61;
	--inc: 0 0 0;
	--suc: 0 0 0;
	--wac: 0 0 0;
	--erc: 0 0 0;
	--rounded-box: 1rem;
	--rounded-btn: 0.5rem;
	--rounded-badge: 1.9rem;
	--animation-btn: 0.25s;
	--animation-input: 0.2s;
	--btn-focus-scale: 0.95;
	--border-btn: 1px;
	--tab-border: 1px;
	--tab-radius: 0.5rem;
	--p: 0.4912 0.3096 275.75;
	--s: 0.6971 0.329 342.55;
	--sc: 0.9871 0.0106 342.55;
	--a: 0.7676 0.184 183.61;
	--n: 0.321785 0.02476 255.701624;
	--nc: 0.894994 0.011585 252.096176;
	--b1: 1 0 0;
	--b2: 0.961151 0 0;
	--b3: 0.924169 0.00108 197.137559;
	--bc: 0.278078 0.029596 256.847952;
}
@media (prefers-color-scheme: dark) {
	:root {
		color-scheme: dark;
		--in: 0.7206 0.191 231.6;
		--su: 64.8% 0.15 160;
		--wa: 0.8471 0.199 83.87;
		--er: 0.7176 0.221 22.18;
		--pc: 0.13138 0.0392 275.75;
		--sc: 0.1496 0.052 342.55;
		--ac: 0.14902 0.0334 183.61;
		--inc: 0 0 0;
		--suc: 0 0 0;
		--wac: 0 0 0;
		--erc: 0 0 0;
		--rounded-box: 1rem;
		--rounded-btn: 0.5rem;
		--rounded-badge: 1.9rem;
		--animation-btn: 0.25s;
		--animation-input: 0.2s;
		--btn-focus-scale: 0.95;
		--border-btn: 1px;
		--tab-border: 1px;
		--tab-radius: 0.5rem;
		--p: 0.6569 0.196 275.75;
		--s: 0.748 0.26 342.55;
		--a: 0.7451 0.167 183.61;
		--n: 0.313815 0.021108 254.139175;
		--nc: 0.746477 0.0216 264.435964;
		--b1: 0.253267 0.015896 252.417568;
		--b2: 0.232607 0.013807 253.100675;
		--b3: 0.211484 0.01165 254.087939;
		--bc: 0.746477 0.0216 264.435964;
	}
}
:root:has(input.theme-controller[value='light']:checked) {
	color-scheme: light;
	--in: 0.7206 0.191 231.6;
	--su: 64.8% 0.15 160;
	--wa: 0.8471 0.199 83.87;
	--er: 0.7176 0.221 22.18;
	--pc: 0.89824 0.06192 275.75;
	--ac: 0.15352 0.0368 183.61;
	--inc: 0 0 0;
	--suc: 0 0 0;
	--wac: 0 0 0;
	--erc: 0 0 0;
	--rounded-box: 1rem;
	--rounded-btn: 0.5rem;
	--rounded-badge: 1.9rem;
	--animation-btn: 0.25s;
	--animation-input: 0.2s;
	--btn-focus-scale: 0.95;
	--border-btn: 1px;
	--tab-border: 1px;
	--tab-radius: 0.5rem;
	--p: 0.4912 0.3096 275.75;
	--s: 0.6971 0.329 342.55;
	--sc: 0.9871 0.0106 342.55;
	--a: 0.7676 0.184 183.61;
	--n: 0.321785 0.02476 255.701624;
	--nc: 0.894994 0.011585 252.096176;
	--b1: 1 0 0;
	--b2: 0.961151 0 0;
	--b3: 0.924169 0.00108 197.137559;
	--bc: 0.278078 0.029596 256.847952;
}
:root:has(input.theme-controller[value='dark']:checked) {
	color-scheme: dark;
	--in: 0.7206 0.191 231.6;
	--su: 64.8% 0.15 160;
	--wa: 0.8471 0.199 83.87;
	--er: 0.7176 0.221 22.18;
	--pc: 0.13138 0.0392 275.75;
	--sc: 0.1496 0.052 342.55;
	--ac: 0.14902 0.0334 183.61;
	--inc: 0 0 0;
	--suc: 0 0 0;
	--wac: 0 0 0;
	--erc: 0 0 0;
	--rounded-box: 1rem;
	--rounded-btn: 0.5rem;
	--rounded-badge: 1.9rem;
	--animation-btn: 0.25s;
	--animation-input: 0.2s;
	--btn-focus-scale: 0.95;
	--border-btn: 1px;
	--tab-border: 1px;
	--tab-radius: 0.5rem;
	--p: 0.6569 0.196 275.75;
	--s: 0.748 0.26 342.55;
	--a: 0.7451 0.167 183.61;
	--n: 0.313815 0.021108 254.139175;
	--nc: 0.746477 0.0216 264.435964;
	--b1: 0.253267 0.015896 252.417568;
	--b2: 0.232607 0.013807 253.100675;
	--b3: 0.211484 0.01165 254.087939;
	--bc: 0.746477 0.0216 264.435964;
}
::moz-focus-inner {
	border-style: none;
	padding: 0;
}
::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
	height: auto;
}
::-webkit-search-decoration {
	-webkit-appearance: none;
}
::-webkit-file-upload-button {
	-webkit-appearance: button;
	font: inherit;
}
::-webkit-datetime-edit-fields-wrapper {
	padding: 0;
}
::-webkit-date-and-time-value {
	min-height: 1.5em;
}
[type='search'] {
	-webkit-appearance: textfield;
	outline-offset: -2px;
}
[multiple] {
	background-image: initial;
	background-position: initial;
	background-repeat: unset;
	background-size: initial;
	padding-right: 0.75rem;
	-webkit-print-color-adjust: unset;
	print-color-adjust: unset;
}
[type='checkbox'] {
	border-radius: 0;
}
[type='radio'] {
	border-radius: 100%;
}
[type='checkbox']:checked {
	background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 16 16' fill='white' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M12.207 4.793a1 1 0 010 1.414l-5 5a1 1 0 01-1.414 0l-2-2a1 1 0 011.414-1.414L6.5 9.086l4.293-4.293a1 1 0 011.414 0z'/%3e%3c/svg%3e");
}
[type='radio']:checked {
	background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 16 16' fill='white' xmlns='http://www.w3.org/2000/svg'%3e%3ccircle cx='8' cy='8' r='3'/%3e%3c/svg%3e");
}
[type='checkbox']:indeterminate {
	background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 16 16'%3e%3cpath stroke='white' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 8h8'/%3e%3c/svg%3e");
	border-color: transparent;
	background-color: currentColor;
	background-size: 100% 100%;
	background-position: center;
	background-repeat: no-repeat;
}
[type='file'] {
	background: unset;
	border-color: inherit;
	border-width: 0;
	border-radius: 0;
	padding: 0;
	font-size: unset;
	line-height: inherit;
}
[type='file']:focus {
	outline: 1px solid ButtonText;
	outline: 1px auto -webkit-focus-ring-color;
}
[data-theme='light'] {
	color-scheme: light;
	--in: 0.7206 0.191 231.6;
	--su: 64.8% 0.15 160;
	--wa: 0.8471 0.199 83.87;
	--er: 0.7176 0.221 22.18;
	--pc: 0.89824 0.06192 275.75;
	--ac: 0.15352 0.0368 183.61;
	--inc: 0 0 0;
	--suc: 0 0 0;
	--wac: 0 0 0;
	--erc: 0 0 0;
	--rounded-box: 1rem;
	--rounded-btn: 0.5rem;
	--rounded-badge: 1.9rem;
	--animation-btn: 0.25s;
	--animation-input: 0.2s;
	--btn-focus-scale: 0.95;
	--border-btn: 1px;
	--tab-border: 1px;
	--tab-radius: 0.5rem;
	--p: 0.4912 0.3096 275.75;
	--s: 0.6971 0.329 342.55;
	--sc: 0.9871 0.0106 342.55;
	--a: 0.7676 0.184 183.61;
	--n: 0.321785 0.02476 255.701624;
	--nc: 0.894994 0.011585 252.096176;
	--b1: 1 0 0;
	--b2: 0.961151 0 0;
	--b3: 0.924169 0.00108 197.137559;
	--bc: 0.278078 0.029596 256.847952;
}
[data-theme='dark'] {
	color-scheme: dark;
	--in: 0.7206 0.191 231.6;
	--su: 64.8% 0.15 160;
	--wa: 0.8471 0.199 83.87;
	--er: 0.7176 0.221 22.18;
	--pc: 0.13138 0.0392 275.75;
	--sc: 0.1496 0.052 342.55;
	--ac: 0.14902 0.0334 183.61;
	--inc: 0 0 0;
	--suc: 0 0 0;
	--wac: 0 0 0;
	--erc: 0 0 0;
	--rounded-box: 1rem;
	--rounded-btn: 0.5rem;
	--rounded-badge: 1.9rem;
	--animation-btn: 0.25s;
	--animation-input: 0.2s;
	--btn-focus-scale: 0.95;
	--border-btn: 1px;
	--tab-border: 1px;
	--tab-radius: 0.5rem;
	--p: 0.6569 0.196 275.75;
	--s: 0.748 0.26 342.55;
	--a: 0.7451 0.167 183.61;
	--n: 0.313815 0.021108 254.139175;
	--nc: 0.746477 0.0216 264.435964;
	--b1: 0.253267 0.015896 252.417568;
	--b2: 0.232607 0.013807 253.100675;
	--b3: 0.211484 0.01165 254.087939;
	--bc: 0.746477 0.0216 264.435964;
}
abbr[title] {
	-webkit-text-decoration: underline dotted;
	text-decoration: underline dotted;
}
a {
	color: inherit;
	text-decoration: inherit;
}
body {
	margin: 0;
	font-family: inherit;
	line-height: inherit;
}
button,
input {
	font-family: inherit;
	font-size: 100%;
	line-height: 1.15;
	margin: 0;
	padding: 0;
	line-height: inherit;
	color: inherit;
}
button {
	text-transform: none;
	background-color: transparent;
	background-image: none;
}
button,
[type='button'],
[type='reset'],
[type='submit'] {
	-webkit-appearance: button;
}
button,
[role='button'] {
	cursor: pointer;
}
html {
	-webkit-text-size-adjust: 100%;
	font-family: Graphik, sans-serif;
	line-height: 1.5;
}
h1,
h5,
figure,
h2,
p {
	margin: 0;
}
h1,
h5,
h2 {
	font-size: inherit;
	font-weight: inherit;
}
html {
	-webkit-tap-highlight-color: transparent;
}
img {
	border-style: solid;
	display: block;
	vertical-align: middle;
	max-width: 100%;
	height: auto;
}
input::placeholder {
	opacity: 1;
	color: #94a3b8;
}
input::webkit-input-placeholder {
	opacity: 1;
	color: #94a3b8;
}
input::-moz-placeholder {
	opacity: 1;
	color: #94a3b8;
}
input:-ms-input-placeholder {
	opacity: 1;
	color: #94a3b8;
}
input::-ms-input-placeholder {
	opacity: 1;
	color: #94a3b8;
}
input::-moz-placeholder,
textarea::-moz-placeholder {
	color: #64748b;
	opacity: 1;
}
input::-ms-input-placeholder,
textarea::-ms-input-placeholder {
	color: #64748b;
	opacity: 1;
}
input::placeholder,
textarea::placeholder {
	color: #64748b;
	opacity: 1;
}
select {
	background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%2364748B' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e");
	background-position: right 0.5rem center;
	background-repeat: no-repeat;
	background-size: 1.5em 1.5em;
	padding-right: 2.5rem;
	-webkit-print-color-adjust: exact;
	print-color-adjust: exact;
}
ul {
	list-style: none;
	margin: 0;
	padding: 0;
}
.avatar > div {
	display: block;
	aspect-ratio: 1 / 1;
	overflow: hidden;
}
.avatar img {
	height: 100%;
	width: 100%;
	object-fit: cover;
}
.avatar.placeholder > div {
	display: flex;
	align-items: center;
	justify-content: center;
}
.btm-nav > * {
	position: relative;
	display: flex;
	height: 100%;
	flex-basis: 100%;
	cursor: pointer;
	flex-direction: column;
	align-items: center;
	justify-content: center;
	gap: 0.25rem;
	border-color: currentColor;
}
.breadcrumbs > ul,
.breadcrumbs > ol {
	display: flex;
	align-items: center;
	white-space: nowrap;
	min-height: min-content;
}
.breadcrumbs > ul > li,
.breadcrumbs > ol > li {
	display: flex;
	align-items: center;
}
.breadcrumbs > ul > li > a,
.breadcrumbs > ol > li > a {
	display: flex;
	cursor: pointer;
	align-items: center;
}
@media (hover: hover) {
	.breadcrumbs > ul > li > a:hover,
	.breadcrumbs > ol > li > a:hover {
		text-decoration-line: underline;
	}
	.label a:hover {
		--tw-text-opacity: 1;
		color: var(--fallback-bc, oklch(var(--bc) / var(--tw-text-opacity)));
	}
	.menu li > *:not(ul, .menu-title, details, .btn):active,
	.menu li > *:not(ul, .menu-title, details, .btn).active,
	.menu li > details > summary:active {
		--tw-bg-opacity: 1;
		background-color: var(--fallback-n, oklch(var(--n) / var(--tw-bg-opacity)));
		--tw-text-opacity: 1;
		color: var(--fallback-nc, oklch(var(--nc) / var(--tw-text-opacity)));
	}
	.tabundefined {
		--tw-text-opacity: 1;
	}
	.tabs-boxed .tab-active:not(.tab-disabled):not([disabled]):hover,
	.tabs-boxed :is(input:checked):hover {
		--tw-text-opacity: 1;
		color: var(--fallback-pc, oklch(var(--pc) / var(--tw-text-opacity)));
	}
	.table tr.hover:hover,
	.table tr.hover:nth-child(2n):hover {
		--tw-bg-opacity: 1;
		background-color: var(
			--fallback-b2,
			oklch(var(--b2) / var(--tw-bg-opacity))
		);
	}
	.table-zebra tr.hover:hover,
	.table-zebra tr.hover:nth-child(2n):hover {
		--tw-bg-opacity: 1;
		background-color: var(
			--fallback-b3,
			oklch(var(--b3) / var(--tw-bg-opacity))
		);
	}
}
btn-disabled,
.btn[disabled],
btn {
	pointer-events: none;
}
:where(.btn:is(input[type='checkbox'])),
:where(.btn:is(input[type='radio'])) {
	width: auto;
	-webkit-appearance: none;
	-moz-appearance: none;
	appearance: none;
}
.btn:is(input[type='checkbox']):after,
.btn:is(input[type='radio']):after {
	--tw-content: attr(aria-label);
	content: var(--tw-content);
}
.card-body :where(p) {
	flex-grow: 1;
}
.card figure {
	display: flex;
	align-items: center;
	justify-content: center;
}
.card.image-full {
	display: grid;
}
.card.image-full:before {
	position: relative;
	content: '';
	z-index: 10;
	border-radius: var(--rounded-box, 1rem);
	--tw-bg-opacity: 1;
	background-color: var(--fallback-n, oklch(var(--n) / var(--tw-bg-opacity)));
	opacity: 0.75;
}
.card.image-full:before,
.card.image-full > * {
	grid-column-start: 1;
	grid-row-start: 1;
}
.card.image-full > figure img {
	height: 100%;
	object-fit: cover;
}
.card.image-full > .card-body {
	position: relative;
	z-index: 20;
	--tw-text-opacity: 1;
	color: var(--fallback-nc, oklch(var(--nc) / var(--tw-text-opacity)));
}
.carousel-center .carousel-item {
	scroll-snap-align: center;
}
.carousel-end .carousel-item {
	scroll-snap-align: end;
}
.chat-start .chat-header,
.chat-start .chat-footer {
	grid-column-start: 2;
}
.chat-start .chat-image {
	grid-column-start: 1;
}
.chat-start .chat-bubble {
	grid-column-start: 2;
	border-end-start-radius: 0px;
}
.chat-start .chat-bubble:before {
	-webkit-mask-image: url("data:image/svg+xml,%3csvg width='3' height='3' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m 0 3 L 3 3 L 3 0 C 3 1 1 3 0 3'/%3e%3c/svg%3e");
	mask-image: url("data:image/svg+xml,%3csvg width='3' height='3' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m 0 3 L 3 3 L 3 0 C 3 1 1 3 0 3'/%3e%3c/svg%3e");
	inset-inline-start: -0.749rem;
}
[dir='rtl'] .chat-start .chat-bubble:before {
	-webkit-mask-image: url("data:image/svg+xml,%3csvg width='3' height='3' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m 0 3 L 1 3 L 3 3 C 2 3 0 1 0 0'/%3e%3c/svg%3e");
	mask-image: url("data:image/svg+xml,%3csvg width='3' height='3' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m 0 3 L 1 3 L 3 3 C 2 3 0 1 0 0'/%3e%3c/svg%3e");
}
.chat-end .chat-header,
.chat-end .chat-footer {
	grid-column-start: 1;
}
.chat-end .chat-image {
	grid-column-start: 2;
}
.chat-end .chat-bubble {
	grid-column-start: 1;
	border-end-end-radius: 0px;
}
.chat-end .chat-bubble:before {
	-webkit-mask-image: url("data:image/svg+xml,%3csvg width='3' height='3' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m 0 3 L 1 3 L 3 3 C 2 3 0 1 0 0'/%3e%3c/svg%3e");
	mask-image: url("data:image/svg+xml,%3csvg width='3' height='3' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m 0 3 L 1 3 L 3 3 C 2 3 0 1 0 0'/%3e%3c/svg%3e");
	inset-inline-start: 99.9%;
}
[dir='rtl'] .chat-end .chat-bubble:before {
	-webkit-mask-image: url("data:image/svg+xml,%3csvg width='3' height='3' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m 0 3 L 3 3 L 3 0 C 3 1 1 3 0 3'/%3e%3c/svg%3e");
	mask-image: url("data:image/svg+xml,%3csvg width='3' height='3' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m 0 3 L 3 3 L 3 0 C 3 1 1 3 0 3'/%3e%3c/svg%3e");
}
collapse-title,
.collapse > input[type='checkbox'],
.collapse > input[type='radio'],
collapse-content {
	grid-column-start: 1;
	grid-row-start: 1;
}
.collapse > input[type='checkbox'],
.collapse > input[type='radio'] {
	-webkit-appearance: none;
	-moz-appearance: none;
	appearance: none;
	opacity: 0;
}
.collapse[open],
collapse-open,
.collapse:focus:not(.collapse-close) {
	grid-template-rows: auto 1fr;
}
.collapse:not(.collapse-close):has(> input[type='checkbox']:checked),
.collapse:not(.collapse-close):has(> input[type='radio']:checked) {
	grid-template-rows: auto 1fr;
}
.collapse[open] > .collapse-content,
.collapse-open > .collapse-content,
.collapse:focus:not(.collapse-close) > .collapse-content,
.collapse:not(.collapse-close)
	> input[type='checkbox']:checked
	~ .collapse-content,
.collapse:not(.collapse-close)
	> input[type='radio']:checked
	~ .collapse-content {
	visibility: visible;
	min-height: fit-content;
}
:root .countdown {
	line-height: 1em;
}
.countdown > * {
	height: 1em;
	display: inline-block;
	overflow-y: hidden;
}
.countdown > *:before {
	position: relative;
	content: '00\a 01\a 02\a 03\a 04\a 05\a 06\a 07\a 08\a 09\a 10\a 11\a 12\a 13\a 14\a 15\a 16\a 17\a 18\a 19\a 20\a 21\a 22\a 23\a 24\a 25\a 26\a 27\a 28\a 29\a 30\a 31\a 32\a 33\a 34\a 35\a 36\a 37\a 38\a 39\a 40\a 41\a 42\a 43\a 44\a 45\a 46\a 47\a 48\a 49\a 50\a 51\a 52\a 53\a 54\a 55\a 56\a 57\a 58\a 59\a 60\a 61\a 62\a 63\a 64\a 65\a 66\a 67\a 68\a 69\a 70\a 71\a 72\a 73\a 74\a 75\a 76\a 77\a 78\a 79\a 80\a 81\a 82\a 83\a 84\a 85\a 86\a 87\a 88\a 89\a 90\a 91\a 92\a 93\a 94\a 95\a 96\a 97\a 98\a 99\a';
	white-space: pre;
	top: calc(var(--value) * -1em);
	text-align: center;
	transition: all 1s cubic-bezier(1, 0, 0, 1);
}
.diff-item-1 > *,
.diff-item-2 > * {
	pointer-events: none;
	position: absolute;
	bottom: 0;
	left: 0;
	top: 0;
	height: 100%;
	width: 100cqi;
	max-width: none;
	object-fit: cover;
	object-position: center;
}
.drawer-side > .drawer-overlay {
	position: sticky;
	top: 0;
	place-self: stretch;
	cursor: pointer;
	background-color: transparent;
	transition-property: color, background-color, border-color,
		text-decoration-color, fill, stroke;
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
	transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
	transition-duration: 0.2s;
}
.drawer-side > * {
	grid-column-start: 1;
	grid-row-start: 1;
}
.drawer-side > *:not(.drawer-overlay) {
	transition-property: transform;
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
	transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
	transition-duration: 0.3s;
	will-change: transform;
	transform: translate(-100%);
}
[dir='rtl'] .drawer-side > *:not(.drawer-overlay) {
	transform: translate(100%);
}
.drawer-toggle:checked ~ .drawer-side {
	pointer-events: auto;
	visibility: visible;
	overflow-y: auto;
}
.drawer-toggle:checked ~ .drawer-side > *:not(.drawer-overlay) {
	transform: translate(0);
}
.drawer-end .drawer-toggle ~ .drawer-content {
	grid-column-start: 1;
}
.drawer-end .drawer-toggle ~ .drawer-side {
	grid-column-start: 2;
	justify-items: end;
}
.drawer-end .drawer-toggle ~ .drawer-side > *:not(.drawer-overlay) {
	transform: translate(100%);
}
[dir='rtl'] .drawer-end .drawer-toggle ~ .drawer-side > *:not(.drawer-overlay) {
	transform: translate(-100%);
}
.drawer-end .drawer-toggle:checked ~ .drawer-side > *:not(.drawer-overlay) {
	transform: translate(0);
}
.dropdown > *:not(summary):focus {
	outline: 2px solid transparent;
	outline-offset: 2px;
}
.dropdown .dropdown-content {
	position: absolute;
}
.dropdown:is(:not(details)) .dropdown-content {
	visibility: hidden;
	opacity: 0;
	transform-origin: top;
	--tw-scale-x: 0.95;
	--tw-scale-y: 0.95;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y))
		rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y))
		scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
	transition-property: color, background-color, border-color,
		text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter,
		backdrop-filter;
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
	transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
	transition-duration: 0.2s;
}
.dropdown-end .dropdown-content {
	inset-inline-end: 0px;
}
.dropdown-left .dropdown-content {
	bottom: auto;
	inset-inline-end: 100%;
	top: 0;
	transform-origin: right;
}
.dropdown-right .dropdown-content {
	bottom: auto;
	inset-inline-start: 100%;
	top: 0;
	transform-origin: left;
}
.dropdown-bottom .dropdown-content {
	bottom: auto;
	top: 100%;
	transform-origin: top;
}
.dropdown-top .dropdown-content {
	bottom: 100%;
	top: auto;
	transform-origin: bottom;
}
.dropdown-end.dropdown-right .dropdown-content,
.dropdown-end.dropdown-left .dropdown-content {
	bottom: 0;
	top: auto;
}
.dropdown.dropdown-open .dropdown-content,
.dropdown:not(.dropdown-hover):focus .dropdown-content,
.dropdown:focus-within .dropdown-content {
	visibility: visible;
	opacity: 1;
}
@media (hover: hover) {
	.dropdown.dropdown-hover:hover .dropdown-content {
		--tw-scale-x: 1;
		--tw-scale-y: 1;
		transform: translate(var(--tw-translate-x), var(--tw-translate-y))
			rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y))
			scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
	}
	.btm-nav > *.disabled:hover,
	.btm-nav > *[disabled]:hover {
		pointer-events: none;
		--tw-border-opacity: 0;
		background-color: var(--fallback-n, oklch(var(--n) / var(--tw-bg-opacity)));
		--tw-bg-opacity: 0.1;
		color: var(--fallback-bc, oklch(var(--bc) / var(--tw-text-opacity)));
		--tw-text-opacity: 0.2;
	}
	.btnundefined {
		--tw-border-opacity: 1;
		border-color: var(
			--fallback-b3,
			oklch(var(--b3) / var(--tw-border-opacity))
		);
		--tw-bg-opacity: 1;
		background-color: var(
			--fallback-b3,
			oklch(var(--b3) / var(--tw-bg-opacity))
		);
	}
	@supports (color: color-mix(in oklab, black, black)) {
		.btn:is(input[type='checkbox']:checked):hover,
		.btn:is(input[type='radio']:checked):hover {
			background-color: color-mix(
				in oklab,
				var(--fallback-p, oklch(var(--p) / 1)) 90%,
				black
			);
			border-color: color-mix(
				in oklab,
				var(--fallback-p, oklch(var(--p) / 1)) 90%,
				black
			);
		}
	}
	@supports not (color: oklch(0 0 0)) {
		.btnundefined {
			background-color: var(--btn-color, var(--fallback-b2));
			border-color: var(--btn-color, var(--fallback-b2));
		}
	}
	.btn.glass:hover {
		--glass-opacity: 25%;
		--glass-border-opacity: 15%;
	}
	@supports (color: oklch(0 0 0)) {
		:where(
				.menu li:not(.menu-title, .disabled) > *:not(ul, details, .menu-title)
			):not(.active, .btn):hover,
		:where(
				.menu
					li:not(.menu-title, .disabled)
					> details
					> summary:not(.menu-title)
			):not(.active, .btn):hover {
			background-color: var(--fallback-bc, oklch(var(--bc) / 0.1));
		}
	}
	.btn-outline.btn-primary:hover {
		--tw-text-opacity: 1;
		color: var(--fallback-pc, oklch(var(--pc) / var(--tw-text-opacity)));
	}
	.btn-outline.btn-secondary:hover {
		--tw-text-opacity: 1;
		color: var(--fallback-sc, oklch(var(--sc) / var(--tw-text-opacity)));
	}
	.btn-outline.btn-accent:hover {
		--tw-text-opacity: 1;
		color: var(--fallback-ac, oklch(var(--ac) / var(--tw-text-opacity)));
	}
	.btn-outline.btn-success:hover {
		--tw-text-opacity: 1;
		color: var(--fallback-suc, oklch(var(--suc) / var(--tw-text-opacity)));
	}
	.btn-outline.btn-info:hover {
		--tw-text-opacity: 1;
		color: var(--fallback-inc, oklch(var(--inc) / var(--tw-text-opacity)));
	}
	.btn-outline.btn-warning:hover {
		--tw-text-opacity: 1;
		color: var(--fallback-wac, oklch(var(--wac) / var(--tw-text-opacity)));
	}
	.btn-outline.btn-error:hover {
		--tw-text-opacity: 1;
		color: var(--fallback-erc, oklch(var(--erc) / var(--tw-text-opacity)));
	}
	.btn:disabled:hover {
		--tw-border-opacity: 0;
		background-color: var(--fallback-n, oklch(var(--n) / var(--tw-bg-opacity)));
		--tw-bg-opacity: 0.2;
		color: var(--fallback-bc, oklch(var(--bc) / var(--tw-text-opacity)));
		--tw-text-opacity: 0.2;
	}
	.btn[disabled]:hover {
		--tw-border-opacity: 0;
		background-color: var(--fallback-n, oklch(var(--n) / var(--tw-bg-opacity)));
		--tw-bg-opacity: 0.2;
		color: var(--fallback-bc, oklch(var(--bc) / var(--tw-text-opacity)));
		--tw-text-opacity: 0.2;
	}
	:where(
			.menu li:not(.menu-title, .disabled) > *:not(ul, details, .menu-title)
		):not(.active, .btn):hover,
	:where(
			.menu li:not(.menu-title, .disabled) > details > summary:not(.menu-title)
		):not(.active, .btn):hover {
		cursor: pointer;
		outline: 2px solid transparent;
		outline-offset: 2px;
	}
	.tab[disabled],
	.tab[disabled]:hover {
		cursor: not-allowed;
		color: var(--fallback-bc, oklch(var(--bc) / var(--tw-text-opacity)));
		--tw-text-opacity: 0.2;
	}
}
.dropdown:is(details) summary::-webkit-details-marker {
	display: none;
}
.footer > * {
	display: grid;
	place-items: start;
	gap: 0.5rem;
}
.footer-center > * {
	place-items: center;
}
.hero > * {
	grid-column-start: 1;
	grid-row-start: 1;
}
.indicator :where(.indicator-item) {
	z-index: 1;
	position: absolute;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y))
		rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y))
		scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
	white-space: nowrap;
	bottom: auto;
	inset-inline-end: 0px;
	inset-inline-start: auto;
	top: 0;
	--tw-translate-y: -50%;
	--tw-translate-x: 50%;
}
.input[type='number']::-webkit-inner-spin-button,
.input-md[type='number']::-webkit-inner-spin-button {
	margin-top: -1rem;
	margin-bottom: -1rem;
	margin-inline-end: -1rem;
}
.input-xs[type='number']::-webkit-inner-spin-button {
	margin-top: -0.25rem;
	margin-bottom: -0.25rem;
	margin-inline-end: -0px;
}
.input-sm[type='number']::-webkit-inner-spin-button {
	margin-top: 0;
	margin-bottom: 0;
	margin-inline-end: -0px;
}
.input-lg[type='number']::-webkit-inner-spin-button {
	margin-top: -1.5rem;
	margin-bottom: -1.5rem;
	margin-inline-end: -1.5rem;
}
.join :where(.join-item) {
	border-start-end-radius: 0;
	border-end-end-radius: 0;
	border-end-start-radius: 0;
	border-start-start-radius: 0;
}
.join .join-item:not(:first-child):not(:last-child),
.join *:not(:first-child):not(:last-child) .join-item {
	border-start-end-radius: 0;
	border-end-end-radius: 0;
	border-end-start-radius: 0;
	border-start-start-radius: 0;
}
.join .join-item:first-child:not(:last-child),
.join *:first-child:not(:last-child) .join-item {
	border-start-end-radius: 0;
	border-end-end-radius: 0;
}
.join .dropdown .join-item:first-child:not(:last-child),
.join *:first-child:not(:last-child) .dropdown .join-item {
	border-start-end-radius: inherit;
	border-end-end-radius: inherit;
}
.join :where(.join-item:first-child:not(:last-child)),
.join :where(*:first-child:not(:last-child) .join-item) {
	border-end-start-radius: inherit;
	border-start-start-radius: inherit;
}
.join .join-item:last-child:not(:first-child),
.join *:last-child:not(:first-child) .join-item {
	border-end-start-radius: 0;
	border-start-start-radius: 0;
}
.join :where(.join-item:last-child:not(:first-child)),
.join :where(*:last-child:not(:first-child) .join-item) {
	border-start-end-radius: inherit;
	border-end-end-radius: inherit;
}
@supports not selector(:has(*)) {
	:where(.join *) {
		border-radius: inherit;
	}
}
@supports selector(:has(*)) {
	:where(.join *:has(.join-item)) {
		border-radius: inherit;
	}
}
:is([dir='rtl'] .mask-half-1) {
	-webkit-mask-position: right;
	mask-position: right;
}
:is([dir='rtl'] .mask-half-2) {
	-webkit-mask-position: left;
	mask-position: left;
}
.menu :where(li ul) {
	position: relative;
	white-space: nowrap;
	margin-inline-start: 1rem;
	padding-inline-start: 0.5rem;
}
.menu :where(li:not(.menu-title) > *:not(ul, details, .menu-title, .btn)),
.menu :where(li:not(.menu-title) > details > summary:not(.menu-title)) {
	display: grid;
	grid-auto-flow: column;
	align-content: flex-start;
	align-items: center;
	gap: 0.5rem;
	grid-auto-columns: minmax(auto, max-content) auto max-content;
	-webkit-user-select: none;
	user-select: none;
	border-radius: var(--rounded-btn, 0.5rem);
	padding: 0.5rem 1rem;
	text-align: start;
	transition-property: color, background-color, border-color,
		text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter,
		backdrop-filter;
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
	transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
	transition-duration: 0.2s;
	text-wrap: balance;
}
.menu li.disabled {
	cursor: not-allowed;
	-webkit-user-select: none;
	user-select: none;
	color: var(--fallback-bc, oklch(var(--bc) / 0.3));
}
.menu :where(li > .menu-dropdown:not(.menu-dropdown-show)) {
	display: none;
}
:where(.menu li) {
	position: relative;
	display: flex;
	flex-shrink: 0;
	flex-direction: column;
	flex-wrap: wrap;
	align-items: stretch;
}
:where(.menu li) .badge {
	justify-self: end;
}
.mockup-code pre[data-prefix]:before {
	content: attr(data-prefix);
	display: inline-block;
	text-align: right;
	width: 2rem;
	opacity: 0.5;
}
.mockup-window pre[data-prefix]:before {
	content: attr(data-prefix);
	display: inline-block;
	text-align: right;
}
.mockup-browser pre[data-prefix]:before {
	content: attr(data-prefix);
	display: inline-block;
	text-align: right;
}
:where(.modal) {
	align-items: center;
}
modal-open,
modal,
.modal-toggle:checked + .modal,
.modal[open] {
	pointer-events: auto;
	visibility: visible;
	opacity: 1;
}
:root:has(
		:is(
				.modal-open,
				.modal:target,
				.modal-toggle:checked + .modal,
				.modal[open]
			)
	) {
	overflow: hidden;
}
:where(.navbar > *:not(script, style)) {
	display: inline-flex;
	align-items: center;
}
.rating :where(input) {
	cursor: pointer;
	border-radius: 0;
	animation: rating-pop var(--animation-input, 0.25s) ease-out;
	height: 1.5rem;
	width: 1.5rem;
	background-color: var(--fallback-bc, oklch(var(--bc) / var(--tw-bg-opacity)));
	--tw-bg-opacity: 1;
}
.select[multiple] {
	height: auto;
}
.stack > * {
	grid-column-start: 1;
	grid-row-start: 1;
	transform: translateY(10%) scale(0.9);
	z-index: 1;
	width: 100%;
	opacity: 0.6;
}
.stack > *:nth-child(2) {
	transform: translateY(5%) scale(0.95);
	z-index: 2;
	opacity: 0.8;
}
.stack > *:nth-child(1) {
	transform: translateY(0) scale(1);
	z-index: 3;
	opacity: 1;
}
:where(.stats) {
	grid-auto-flow: column;
	overflow-x: auto;
}
.steps .step {
	display: grid;
	grid-template-columns: repeat(1, minmax(0, 1fr));
	grid-template-columns: auto;
	grid-template-rows: repeat(2, minmax(0, 1fr));
	grid-template-rows: 40px 1fr;
	place-items: center;
	text-align: center;
	min-width: 4rem;
}
.swap > * {
	grid-column-start: 1;
	grid-row-start: 1;
	transition-duration: 0.3s;
	transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
	transition-property: transform, opacity;
}
.swap input {
	-webkit-appearance: none;
	-moz-appearance: none;
	appearance: none;
}
.swap .swap-on,
.swap .swap-indeterminate,
.swap input:indeterminate ~ .swap-on {
	opacity: 0;
}
.swap input:checked ~ .swap-off,
.swap-active .swap-off,
.swap input:indeterminate ~ .swap-off {
	opacity: 0;
}
.swap input:checked ~ .swap-on,
.swap-active .swap-on,
.swap input:indeterminate ~ .swap-indeterminate {
	opacity: 1;
}
.tabs-lifted:has(.tab-content[class^='rounded-'])
	.tab:first-child:not(.tab-active),
.tabs-lifted:has(.tab-content[class*=' rounded-'])
	.tab:first-child:not(.tab-active) {
	border-bottom-color: transparent;
}
.tab:is(input[type='radio']) {
	width: auto;
	border-bottom-right-radius: 0;
	border-bottom-left-radius: 0;
}
.tab:is(input[type='radio']):after {
	--tw-content: attr(aria-label);
	content: var(--tw-content);
}
:checked + .tab-content:nth-child(2),
.tab-active + .tab-content:nth-child(2) {
	border-start-start-radius: 0px;
}
input.tab:checked + .tab-content,
.tab-active + .tab-content {
	display: block;
}
.table :where(.table-pin-rows thead tr) {
	position: sticky;
	top: 0;
	z-index: 1;
	--tw-bg-opacity: 1;
	background-color: var(--fallback-b1, oklch(var(--b1) / var(--tw-bg-opacity)));
}
.table :where(.table-pin-rows tfoot tr) {
	position: sticky;
	bottom: 0;
	z-index: 1;
	--tw-bg-opacity: 1;
	background-color: var(--fallback-b1, oklch(var(--b1) / var(--tw-bg-opacity)));
}
.table :where(.table-pin-cols tr th) {
	position: sticky;
	left: 0;
	right: 0;
	--tw-bg-opacity: 1;
	background-color: var(--fallback-b1, oklch(var(--b1) / var(--tw-bg-opacity)));
}
.table-zebra tbody tr:nth-child(2n) :where(.table-pin-cols tr th) {
	--tw-bg-opacity: 1;
	background-color: var(--fallback-b2, oklch(var(--b2) / var(--tw-bg-opacity)));
}
:where(.timeline > li) {
	position: relative;
	display: grid;
	flex-shrink: 0;
	align-items: center;
	grid-template-rows: var(--timeline-row-start, minmax(0, 1fr)) auto var(
			--timeline-row-end,
			minmax(0, 1fr)
		);
	grid-template-columns: var(--timeline-col-start, minmax(0, 1fr)) auto var(
			--timeline-col-end,
			minmax(0, 1fr)
		);
}
.timeline > li > hr {
	width: 100%;
	border-width: 0px;
}
:where(.timeline > li > hr):first-child {
	grid-column-start: 1;
	grid-row-start: 2;
}
:where(.timeline > li > hr):last-child {
	grid-column-start: 3;
	grid-column-end: none;
	grid-row-start: 2;
	grid-row-end: auto;
}
.avatar-group :where(.avatar) {
	overflow: hidden;
	border-radius: 9999px;
	border-width: 4px;
	--tw-border-opacity: 1;
	border-color: var(--fallback-b1, oklch(var(--b1) / var(--tw-border-opacity)));
}
.badge-outline.badge-neutral {
	--tw-text-opacity: 1;
	color: var(--fallback-n, oklch(var(--n) / var(--tw-text-opacity)));
}
.badge-outline.badge-primary {
	--tw-text-opacity: 1;
	color: var(--fallback-p, oklch(var(--p) / var(--tw-text-opacity)));
}
.badge-outline.badge-secondary {
	--tw-text-opacity: 1;
	color: var(--fallback-s, oklch(var(--s) / var(--tw-text-opacity)));
}
.badge-outline.badge-accent {
	--tw-text-opacity: 1;
	color: var(--fallback-a, oklch(var(--a) / var(--tw-text-opacity)));
}
.badge-outline.badge-info {
	--tw-text-opacity: 1;
	color: var(--fallback-in, oklch(var(--in) / var(--tw-text-opacity)));
}
.badge-outline.badge-success {
	--tw-text-opacity: 1;
	color: var(--fallback-su, oklch(var(--su) / var(--tw-text-opacity)));
}
.badge-outline.badge-warning {
	--tw-text-opacity: 1;
	color: var(--fallback-wa, oklch(var(--wa) / var(--tw-text-opacity)));
}
.badge-outline.badge-error {
	--tw-text-opacity: 1;
	color: var(--fallback-er, oklch(var(--er) / var(--tw-text-opacity)));
}
.btm-nav > *:not(.active) {
	padding-top: 0.125rem;
}
.btm-nav > *:where(.active) {
	border-top-width: 2px;
	--tw-bg-opacity: 1;
	background-color: var(--fallback-b1, oklch(var(--b1) / var(--tw-bg-opacity)));
}
.btm-nav > *.disabled,
.btm-nav > *[disabled] {
	pointer-events: none;
	--tw-border-opacity: 0;
	background-color: var(--fallback-n, oklch(var(--n) / var(--tw-bg-opacity)));
	--tw-bg-opacity: 0.1;
	color: var(--fallback-bc, oklch(var(--bc) / var(--tw-text-opacity)));
	--tw-text-opacity: 0.2;
}
.btm-nav > * .label {
	font-size: 1rem;
	line-height: 1.5rem;
}
.breadcrumbs > ul > li > a:focus,
.breadcrumbs > ol > li > a:focus {
	outline: 2px solid transparent;
	outline-offset: 2px;
}
.breadcrumbs > ul > li > a:focus-visible,
.breadcrumbs > ol > li > a:focus-visible {
	outline: 2px solid currentColor;
	outline-offset: 2px;
}
.breadcrumbs > ul > li + *:before,
.breadcrumbs > ol > li + *:before {
	content: '';
	margin-left: 0.5rem;
	margin-right: 0.75rem;
	display: block;
	height: 0.375rem;
	width: 0.375rem;
	--tw-rotate: 45deg;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y))
		rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y))
		scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
	opacity: 0.4;
	border-top: 1px solid;
	border-right: 1px solid;
	background-color: transparent;
}
[dir='rtl'] .breadcrumbs > ul > li + *:before,
[dir='rtl'] .breadcrumbs > ol > li + *:before {
	--tw-rotate: -135deg;
}
@supports not (color: oklch(0 0 0)) {
	.btn {
		background-color: var(--btn-color, var(--fallback-b2));
		border-color: var(--btn-color, var(--fallback-b2));
	}
	.btn-primary {
		--btn-color: var(--fallback-p);
	}
	.btn-secondary {
		--btn-color: var(--fallback-s);
	}
	.btn-accent {
		--btn-color: var(--fallback-a);
	}
	.prose :where(code):not(:where([class~='not-prose'] *, pre *)) {
		background-color: var(--fallback-b3, oklch(var(--b3) / 1));
	}
}
@supports (color: color-mix(in oklab, black, black)) {
	.btn-outline.btn-primary.btn-active {
		background-color: color-mix(
			in oklab,
			var(--fallback-p, oklch(var(--p) / 1)) 90%,
			black
		);
		border-color: color-mix(
			in oklab,
			var(--fallback-p, oklch(var(--p) / 1)) 90%,
			black
		);
	}
	.btn-outline.btn-secondary.btn-active {
		background-color: color-mix(
			in oklab,
			var(--fallback-s, oklch(var(--s) / 1)) 90%,
			black
		);
		border-color: color-mix(
			in oklab,
			var(--fallback-s, oklch(var(--s) / 1)) 90%,
			black
		);
	}
	.btn-outline.btn-accent.btn-active {
		background-color: color-mix(
			in oklab,
			var(--fallback-a, oklch(var(--a) / 1)) 90%,
			black
		);
		border-color: color-mix(
			in oklab,
			var(--fallback-a, oklch(var(--a) / 1)) 90%,
			black
		);
	}
	.btn-outline.btn-success.btn-active {
		background-color: color-mix(
			in oklab,
			var(--fallback-su, oklch(var(--su) / 1)) 90%,
			black
		);
		border-color: color-mix(
			in oklab,
			var(--fallback-su, oklch(var(--su) / 1)) 90%,
			black
		);
	}
	.btn-outline.btn-info.btn-active {
		background-color: color-mix(
			in oklab,
			var(--fallback-in, oklch(var(--in) / 1)) 90%,
			black
		);
		border-color: color-mix(
			in oklab,
			var(--fallback-in, oklch(var(--in) / 1)) 90%,
			black
		);
	}
	.btn-outline.btn-warning.btn-active {
		background-color: color-mix(
			in oklab,
			var(--fallback-wa, oklch(var(--wa) / 1)) 90%,
			black
		);
		border-color: color-mix(
			in oklab,
			var(--fallback-wa, oklch(var(--wa) / 1)) 90%,
			black
		);
	}
	.btn-outline.btn-error.btn-active {
		background-color: color-mix(
			in oklab,
			var(--fallback-er, oklch(var(--er) / 1)) 90%,
			black
		);
		border-color: color-mix(
			in oklab,
			var(--fallback-er, oklch(var(--er) / 1)) 90%,
			black
		);
	}
}
.btn.glass {
	--tw-shadow: 0 0 #0000;
	--tw-shadow-colored: 0 0 #0000;
	box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),
		var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
	outline-color: currentColor;
}
.btn.glass.btn-active {
	--glass-opacity: 25%;
	--glass-border-opacity: 15%;
}
.btn-ghost.btn-active {
	border-color: transparent;
	background-color: var(--fallback-bc, oklch(var(--bc) / 0.2));
}
.btn-link.btn-active {
	border-color: transparent;
	background-color: transparent;
	text-decoration-line: underline;
}
.btn-outline.btn-active {
	--tw-border-opacity: 1;
	border-color: var(--fallback-bc, oklch(var(--bc) / var(--tw-border-opacity)));
	--tw-bg-opacity: 1;
	background-color: var(--fallback-bc, oklch(var(--bc) / var(--tw-bg-opacity)));
	--tw-text-opacity: 1;
	color: var(--fallback-b1, oklch(var(--b1) / var(--tw-text-opacity)));
}
.btn-outline.btn-primary {
	--tw-text-opacity: 1;
	color: var(--fallback-p, oklch(var(--p) / var(--tw-text-opacity)));
}
.btn-outline.btn-primary.btn-active {
	--tw-text-opacity: 1;
	color: var(--fallback-pc, oklch(var(--pc) / var(--tw-text-opacity)));
}
.btn-outline.btn-secondary {
	--tw-text-opacity: 1;
	color: var(--fallback-s, oklch(var(--s) / var(--tw-text-opacity)));
}
.btn-outline.btn-secondary.btn-active {
	--tw-text-opacity: 1;
	color: var(--fallback-sc, oklch(var(--sc) / var(--tw-text-opacity)));
}
.btn-outline.btn-accent {
	--tw-text-opacity: 1;
	color: var(--fallback-a, oklch(var(--a) / var(--tw-text-opacity)));
}
.btn-outline.btn-accent.btn-active {
	--tw-text-opacity: 1;
	color: var(--fallback-ac, oklch(var(--ac) / var(--tw-text-opacity)));
}
.btn-outline.btn-success {
	--tw-text-opacity: 1;
	color: var(--fallback-su, oklch(var(--su) / var(--tw-text-opacity)));
}
.btn-outline.btn-success.btn-active {
	--tw-text-opacity: 1;
	color: var(--fallback-suc, oklch(var(--suc) / var(--tw-text-opacity)));
}
.btn-outline.btn-info {
	--tw-text-opacity: 1;
	color: var(--fallback-in, oklch(var(--in) / var(--tw-text-opacity)));
}
.btn-outline.btn-info.btn-active {
	--tw-text-opacity: 1;
	color: var(--fallback-inc, oklch(var(--inc) / var(--tw-text-opacity)));
}
.btn-outline.btn-warning {
	--tw-text-opacity: 1;
	color: var(--fallback-wa, oklch(var(--wa) / var(--tw-text-opacity)));
}
.btn-outline.btn-warning.btn-active {
	--tw-text-opacity: 1;
	color: var(--fallback-wac, oklch(var(--wac) / var(--tw-text-opacity)));
}
.btn-outline.btn-error {
	--tw-text-opacity: 1;
	color: var(--fallback-er, oklch(var(--er) / var(--tw-text-opacity)));
}
.btn-outline.btn-error.btn-active {
	--tw-text-opacity: 1;
	color: var(--fallback-erc, oklch(var(--erc) / var(--tw-text-opacity)));
}
.btn.btn-disabled,
.btn[disabled],
btn {
	--tw-border-opacity: 0;
	background-color: var(--fallback-n, oklch(var(--n) / var(--tw-bg-opacity)));
	--tw-bg-opacity: 0.2;
	color: var(--fallback-bc, oklch(var(--bc) / var(--tw-text-opacity)));
	--tw-text-opacity: 0.2;
}
.btn:is(input[type='checkbox']:checked),
.btn:is(input[type='radio']:checked) {
	--tw-border-opacity: 1;
	border-color: var(--fallback-p, oklch(var(--p) / var(--tw-border-opacity)));
	--tw-bg-opacity: 1;
	background-color: var(--fallback-p, oklch(var(--p) / var(--tw-bg-opacity)));
	--tw-text-opacity: 1;
	color: var(--fallback-pc, oklch(var(--pc) / var(--tw-text-opacity)));
}
.btn:is(input[type='checkbox']:checked):focus-visible,
.btn:is(input[type='radio']:checked):focus-visible {
	outline-color: var(--fallback-p, oklch(var(--p) / 1));
}
@keyframes button-pop {
	0% {
		transform: scale(var(--btn-focus-scale, 0.98));
	}
	40% {
		transform: scale(1.02);
	}
	to {
		transform: scale(1);
	}
}
.card :where(figure:first-child) {
	overflow: hidden;
	border-start-start-radius: inherit;
	border-start-end-radius: inherit;
	border-end-start-radius: unset;
	border-end-end-radius: unset;
}
.card :where(figure:last-child) {
	overflow: hidden;
	border-start-start-radius: unset;
	border-start-end-radius: unset;
	border-end-start-radius: inherit;
	border-end-end-radius: inherit;
}
.card.bordered {
	border-width: 1px;
	--tw-border-opacity: 1;
	border-color: var(--fallback-b2, oklch(var(--b2) / var(--tw-border-opacity)));
}
.card.compact .card-body {
	padding: 1rem;
	font-size: 0.875rem;
	line-height: 1.25rem;
}
.card.image-full :where(figure) {
	overflow: hidden;
	border-radius: inherit;
}
checkbox,
.checkbox[checked='true'],
.checkbox[aria-checked='true'] {
	background-repeat: no-repeat;
	animation: checkmark var(--animation-input, 0.2s) ease-out;
	background-color: var(--chkbg);
	background-image: linear-gradient(
			-45deg,
			transparent 65%,
			var(--chkbg) 65.99%
		),
		linear-gradient(45deg, transparent 75%, var(--chkbg) 75.99%),
		linear-gradient(-45deg, var(--chkbg) 40%, transparent 40.99%),
		linear-gradient(
			45deg,
			var(--chkbg) 30%,
			var(--chkfg) 30.99%,
			var(--chkfg) 40%,
			transparent 40.99%
		),
		linear-gradient(-45deg, var(--chkfg) 50%, var(--chkbg) 50.99%);
}
checkbox-primary,
.checkbox-primary[checked='true'],
.checkbox-primary[aria-checked='true'] {
	--tw-border-opacity: 1;
	border-color: var(--fallback-p, oklch(var(--p) / var(--tw-border-opacity)));
	--tw-bg-opacity: 1;
	background-color: var(--fallback-p, oklch(var(--p) / var(--tw-bg-opacity)));
	--tw-text-opacity: 1;
	color: var(--fallback-pc, oklch(var(--pc) / var(--tw-text-opacity)));
}
checkbox-secondary,
.checkbox-secondary[checked='true'],
.checkbox-secondary[aria-checked='true'] {
	--tw-border-opacity: 1;
	border-color: var(--fallback-s, oklch(var(--s) / var(--tw-border-opacity)));
	--tw-bg-opacity: 1;
	background-color: var(--fallback-s, oklch(var(--s) / var(--tw-bg-opacity)));
	--tw-text-opacity: 1;
	color: var(--fallback-sc, oklch(var(--sc) / var(--tw-text-opacity)));
}
checkbox-accent,
.checkbox-accent[checked='true'],
.checkbox-accent[aria-checked='true'] {
	--tw-border-opacity: 1;
	border-color: var(--fallback-a, oklch(var(--a) / var(--tw-border-opacity)));
	--tw-bg-opacity: 1;
	background-color: var(--fallback-a, oklch(var(--a) / var(--tw-bg-opacity)));
	--tw-text-opacity: 1;
	color: var(--fallback-ac, oklch(var(--ac) / var(--tw-text-opacity)));
}
checkbox-success,
.checkbox-success[checked='true'],
.checkbox-success[aria-checked='true'] {
	--tw-border-opacity: 1;
	border-color: var(--fallback-su, oklch(var(--su) / var(--tw-border-opacity)));
	--tw-bg-opacity: 1;
	background-color: var(--fallback-su, oklch(var(--su) / var(--tw-bg-opacity)));
	--tw-text-opacity: 1;
	color: var(--fallback-suc, oklch(var(--suc) / var(--tw-text-opacity)));
}
checkbox-warning,
.checkbox-warning[checked='true'],
.checkbox-warning[aria-checked='true'] {
	--tw-border-opacity: 1;
	border-color: var(--fallback-wa, oklch(var(--wa) / var(--tw-border-opacity)));
	--tw-bg-opacity: 1;
	background-color: var(--fallback-wa, oklch(var(--wa) / var(--tw-bg-opacity)));
	--tw-text-opacity: 1;
	color: var(--fallback-wac, oklch(var(--wac) / var(--tw-text-opacity)));
}
checkbox-info,
.checkbox-info[checked='true'],
.checkbox-info[aria-checked='true'] {
	--tw-border-opacity: 1;
	border-color: var(--fallback-in, oklch(var(--in) / var(--tw-border-opacity)));
	--tw-bg-opacity: 1;
	background-color: var(--fallback-in, oklch(var(--in) / var(--tw-bg-opacity)));
	--tw-text-opacity: 1;
	color: var(--fallback-inc, oklch(var(--inc) / var(--tw-text-opacity)));
}
checkbox-error,
.checkbox-error[checked='true'],
.checkbox-error[aria-checked='true'] {
	--tw-border-opacity: 1;
	border-color: var(--fallback-er, oklch(var(--er) / var(--tw-border-opacity)));
	--tw-bg-opacity: 1;
	background-color: var(--fallback-er, oklch(var(--er) / var(--tw-bg-opacity)));
	--tw-text-opacity: 1;
	color: var(--fallback-erc, oklch(var(--erc) / var(--tw-text-opacity)));
}
@keyframes checkmark {
	0% {
		background-position-y: 5px;
	}
	50% {
		background-position-y: -2px;
	}
	to {
		background-position-y: 0;
	}
}
details.collapse {
	width: 100%;
}
details.collapse summary {
	position: relative;
	display: block;
	outline: 2px solid transparent;
	outline-offset: 2px;
}
details.collapse summary::-webkit-details-marker {
	display: none;
}
.collapse:has(.collapse-title:focus-visible),
.collapse:has(> input[type='checkbox']:focus-visible),
.collapse:has(> input[type='radio']:focus-visible) {
	outline-style: solid;
	outline-width: 2px;
	outline-offset: 2px;
	outline-color: var(--fallback-bc, oklch(var(--bc) / 1));
}
.collapse-arrow > .collapse-title:after {
	position: absolute;
	display: block;
	height: 0.5rem;
	width: 0.5rem;
	--tw-translate-y: -100%;
	--tw-rotate: 45deg;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y))
		rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y))
		scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
	transition-property: all;
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
	transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
	transition-duration: 0.15s;
	transition-duration: 0.2s;
	top: 1.9rem;
	inset-inline-end: 1.4rem;
	content: '';
	transform-origin: 75% 75%;
	box-shadow: 2px 2px;
	pointer-events: none;
}
.collapse-plus > .collapse-title:after {
	position: absolute;
	display: block;
	height: 0.5rem;
	width: 0.5rem;
	transition-property: all;
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
	transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
	transition-duration: 0.3s;
	top: 0.9rem;
	inset-inline-end: 1.4rem;
	content: '+';
	pointer-events: none;
}
.collapse:not(.collapse-open):not(.collapse-close) > input[type='checkbox'],
.collapse:not(.collapse-open):not(.collapse-close)
	> input[type='radio']:not(:checked),
.collapse:not(.collapse-open):not(.collapse-close) > .collapse-title {
	cursor: pointer;
}
.collapse:focus:not(.collapse-open):not(.collapse-close):not(.collapse[open])
	> .collapse-title {
	cursor: unset;
}
:where(.collapse > input[type='checkbox']),
:where(.collapse > input[type='radio']) {
	z-index: 1;
}
collapse-title,
:where(.collapse > input[type='checkbox']),
:where(.collapse > input[type='radio']) {
	width: 100%;
	padding: 1rem;
	padding-inline-end: 3rem;
	min-height: 3.75rem;
	transition: background-color 0.2s ease-out;
}
.collapse[open] > :where(.collapse-content),
.collapse-open > :where(.collapse-content),
.collapse:focus:not(.collapse-close) > :where(.collapse-content),
.collapse:not(.collapse-close)
	> :where(input[type='checkbox']:checked ~ .collapse-content),
.collapse:not(.collapse-close)
	> :where(input[type='radio']:checked ~ .collapse-content) {
	padding-bottom: 1rem;
	transition: padding 0.2s ease-out, background-color 0.2s ease-out;
}
.collapse[open].collapse-arrow > .collapse-title:after,
.collapse-open.collapse-arrow > .collapse-title:after,
.collapse-arrow:focus:not(.collapse-close) > .collapse-title:after,
.collapse-arrow:not(.collapse-close)
	> input[type='checkbox']:checked
	~ .collapse-title:after,
.collapse-arrow:not(.collapse-close)
	> input[type='radio']:checked
	~ .collapse-title:after {
	--tw-translate-y: -50%;
	--tw-rotate: 225deg;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y))
		rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y))
		scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.collapse[open].collapse-plus > .collapse-title:after,
.collapse-open.collapse-plus > .collapse-title:after,
.collapse-plus:focus:not(.collapse-close) > .collapse-title:after,
.collapse-plus:not(.collapse-close)
	> input[type='checkbox']:checked
	~ .collapse-title:after,
.collapse-plus:not(.collapse-close)
	> input[type='radio']:checked
	~ .collapse-title:after {
	content: '−';
}
.drawer-toggle:checked ~ .drawer-side > .drawer-overlay {
	background-color: #0006;
}
.drawer-toggle:focus-visible ~ .drawer-content label.drawer-button {
	outline-style: solid;
	outline-width: 2px;
	outline-offset: 2px;
}
.dropdown.dropdown-open .dropdown-content,
.dropdown:focus .dropdown-content,
.dropdown:focus-within .dropdown-content {
	--tw-scale-x: 1;
	--tw-scale-y: 1;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y))
		rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y))
		scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
file-input-disabled,
.file-input[disabled] {
	cursor: not-allowed;
	--tw-border-opacity: 1;
	border-color: var(--fallback-b2, oklch(var(--b2) / var(--tw-border-opacity)));
	--tw-bg-opacity: 1;
	background-color: var(--fallback-b2, oklch(var(--b2) / var(--tw-bg-opacity)));
	--tw-text-opacity: 0.2;
}
file-input-disabled,
.file-input[disabled]::placeholder {
	color: var(--fallback-bc, oklch(var(--bc) / var(--tw-placeholder-opacity)));
	--tw-placeholder-opacity: 0.2;
}
file-input-disabled,
.file-input[disabled]::file-selector-button {
	--tw-border-opacity: 0;
	background-color: var(--fallback-n, oklch(var(--n) / var(--tw-bg-opacity)));
	--tw-bg-opacity: 0.2;
	color: var(--fallback-bc, oklch(var(--bc) / var(--tw-text-opacity)));
	--tw-text-opacity: 0.2;
}
.input input {
	--tw-bg-opacity: 1;
	background-color: var(--fallback-p, oklch(var(--p) / var(--tw-bg-opacity)));
	background-color: transparent;
}
.input input:focus {
	outline: 2px solid transparent;
	outline-offset: 2px;
}
.input[list]::-webkit-calendar-picker-indicator {
	line-height: 1em;
}
input-disabled,
input,
.input[disabled] {
	cursor: not-allowed;
	--tw-border-opacity: 1;
	border-color: var(--fallback-b2, oklch(var(--b2) / var(--tw-border-opacity)));
	--tw-bg-opacity: 1;
	background-color: var(--fallback-b2, oklch(var(--b2) / var(--tw-bg-opacity)));
	color: var(--fallback-bc, oklch(var(--bc) / 0.4));
}
input-disabled,
input,
.input[disabled]::placeholder {
	color: var(--fallback-bc, oklch(var(--bc) / var(--tw-placeholder-opacity)));
	--tw-placeholder-opacity: 0.2;
}
.join > :where(*:not(:first-child)) {
	margin-top: 0;
	margin-bottom: 0;
	margin-inline-start: -1px;
}
:where(.menu li:empty) {
	--tw-bg-opacity: 1;
	background-color: var(--fallback-bc, oklch(var(--bc) / var(--tw-bg-opacity)));
	opacity: 0.1;
	margin: 0.5rem 1rem;
	height: 1px;
}
.menu :where(li ul):before {
	position: absolute;
	bottom: 0.75rem;
	inset-inline-start: 0px;
	top: 0.75rem;
	width: 1px;
	--tw-bg-opacity: 1;
	background-color: var(--fallback-bc, oklch(var(--bc) / var(--tw-bg-opacity)));
	opacity: 0.1;
	content: '';
}
:where(
		.menu li:not(.menu-title, .disabled) > *:not(ul, details, .menu-title)
	):not(summary, .active, .btn).focus,
:where(
		.menu li:not(.menu-title, .disabled) > *:not(ul, details, .menu-title)
	):not(summary, .active, .btn):focus,
:where(
		.menu li:not(.menu-title, .disabled) > *:not(ul, details, .menu-title)
	):is(summary):not(.active, .btn):focus-visible,
:where(
		.menu li:not(.menu-title, .disabled) > details > summary:not(.menu-title)
	):not(summary, .active, .btn).focus,
:where(
		.menu li:not(.menu-title, .disabled) > details > summary:not(.menu-title)
	):not(summary, .active, .btn):focus,
:where(
		.menu li:not(.menu-title, .disabled) > details > summary:not(.menu-title)
	):is(summary):not(.active, .btn):focus-visible {
	cursor: pointer;
	background-color: var(--fallback-bc, oklch(var(--bc) / 0.1));
	--tw-text-opacity: 1;
	color: var(--fallback-bc, oklch(var(--bc) / var(--tw-text-opacity)));
	outline: 2px solid transparent;
	outline-offset: 2px;
}
.menu li > *:not(ul, .menu-title, details, .btn):active,
.menu li > *:not(ul, .menu-title, details, .btn).active,
.menu li > details > summary:active {
	--tw-bg-opacity: 1;
	background-color: var(--fallback-n, oklch(var(--n) / var(--tw-bg-opacity)));
	--tw-text-opacity: 1;
	color: var(--fallback-nc, oklch(var(--nc) / var(--tw-text-opacity)));
}
.menu :where(li > details > summary)::-webkit-details-marker {
	display: none;
}
.menu :where(li > details > summary):after,
.menu :where(li > .menu-dropdown-toggle):after {
	justify-self: end;
	display: block;
	margin-top: -0.5rem;
	height: 0.5rem;
	width: 0.5rem;
	transform: rotate(45deg);
	transition-property: transform, margin-top;
	transition-duration: 0.3s;
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
	content: '';
	transform-origin: 75% 75%;
	box-shadow: 2px 2px;
	pointer-events: none;
}
.menu :where(li > details[open] > summary):after,
.menu :where(li > .menu-dropdown-toggle.menu-dropdown-show):after {
	transform: rotate(225deg);
	margin-top: 0;
}
.mockup-code pre {
	padding-right: 1.25rem;
}
.mockup-code pre:before {
	content: '';
	margin-right: 2ch;
}
:is([dir='rtl'] .mockup-window):before {
	align-self: flex-end;
}
.mockup-phone .camera {
	position: relative;
	top: 0;
	left: 0;
	background: #000;
	height: 25px;
	width: 150px;
	margin: 0 auto;
	border-bottom-left-radius: 17px;
	border-bottom-right-radius: 17px;
	z-index: 11;
}
.mockup-phone .camera:before {
	content: '';
	position: absolute;
	top: 35%;
	left: 50%;
	width: 50px;
	height: 4px;
	border-radius: 5px;
	background-color: #0c0b0e;
	transform: translate(-50%, -50%);
}
.mockup-phone .camera:after {
	content: '';
	position: absolute;
	top: 20%;
	left: 70%;
	width: 8px;
	height: 8px;
	border-radius: 5px;
	background-color: #0f0b25;
}
.mockup-phone .display {
	overflow: hidden;
	border-radius: 40px;
	margin-top: -25px;
}
.mockup-browser .mockup-browser-toolbar {
	margin-top: 0.75rem;
	margin-bottom: 0.75rem;
	display: inline-flex;
	width: 100%;
	align-items: center;
	padding-right: 1.4em;
}
:is([dir='rtl'] .mockup-browser .mockup-browser-toolbar) {
	flex-direction: row-reverse;
}
.mockup-browser .mockup-browser-toolbar:before {
	content: '';
	margin-right: 4.8rem;
	display: inline-block;
	aspect-ratio: 1 / 1;
	height: 0.75rem;
	border-radius: 9999px;
	opacity: 0.3;
	box-shadow: 1.4em 0, 2.8em 0, 4.2em 0;
}
.mockup-browser .mockup-browser-toolbar .input {
	position: relative;
	margin-left: auto;
	margin-right: auto;
	display: block;
	height: 1.75rem;
	width: 24rem;
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: nowrap;
	--tw-bg-opacity: 1;
	background-color: var(--fallback-b2, oklch(var(--b2) / var(--tw-bg-opacity)));
	padding-left: 2rem;
	direction: ltr;
}
.mockup-browser .mockup-browser-toolbar .input:before {
	content: '';
	position: absolute;
	left: 0.5rem;
	top: 50%;
	aspect-ratio: 1 / 1;
	height: 0.75rem;
	--tw-translate-y: -50%;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y))
		rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y))
		scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
	border-radius: 9999px;
	border-width: 2px;
	border-color: currentColor;
	opacity: 0.6;
}
.mockup-browser .mockup-browser-toolbar .input:after {
	content: '';
	position: absolute;
	left: 1.25rem;
	top: 50%;
	height: 0.5rem;
	--tw-translate-y: 25%;
	--tw-rotate: -45deg;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y))
		rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y))
		scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
	border-radius: 9999px;
	border-width: 1px;
	border-color: currentColor;
	opacity: 0.6;
}
.modal:not(dialog:not(.modal-open)),
modal {
	background-color: #0006;
	animation: modal-pop 0.2s ease-out;
}
.modal-open .modal-box,
.modal-toggle:checked + .modal .modal-box,
.modal:target .modal-box,
.modal[open] .modal-box {
	--tw-translate-y: 0px;
	--tw-scale-x: 1;
	--tw-scale-y: 1;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y))
		rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y))
		scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.modal-action > :not([hidden]) ~ :not([hidden]) {
	--tw-space-x-reverse: 0;
	margin-right: calc(0.5rem * var(--tw-space-x-reverse));
	margin-left: calc(0.5rem * calc(1 - var(--tw-space-x-reverse)));
}
@keyframes modal-pop {
	0% {
		opacity: 0;
	}
}
@keyframes progress-loading {
	50% {
		background-position-x: -115%;
	}
}
radio,
.radio[aria-checked='true'] {
	--tw-bg-opacity: 1;
	background-color: var(--fallback-bc, oklch(var(--bc) / var(--tw-bg-opacity)));
	background-image: none;
	animation: radiomark var(--animation-input, 0.2s) ease-out;
	box-shadow: 0 0 0 4px var(--fallback-b1, oklch(var(--b1) / 1)) inset,
		0 0 0 4px var(--fallback-b1, oklch(var(--b1) / 1)) inset;
}
radio-primary,
.radio-primary[aria-checked='true'] {
	--tw-border-opacity: 1;
	border-color: var(--fallback-p, oklch(var(--p) / var(--tw-border-opacity)));
	--tw-bg-opacity: 1;
	background-color: var(--fallback-p, oklch(var(--p) / var(--tw-bg-opacity)));
	--tw-text-opacity: 1;
	color: var(--fallback-pc, oklch(var(--pc) / var(--tw-text-opacity)));
}
radio-secondary,
.radio-secondary[aria-checked='true'] {
	--tw-border-opacity: 1;
	border-color: var(--fallback-s, oklch(var(--s) / var(--tw-border-opacity)));
	--tw-bg-opacity: 1;
	background-color: var(--fallback-s, oklch(var(--s) / var(--tw-bg-opacity)));
	--tw-text-opacity: 1;
	color: var(--fallback-sc, oklch(var(--sc) / var(--tw-text-opacity)));
}
radio-accent,
.radio-accent[aria-checked='true'] {
	--tw-border-opacity: 1;
	border-color: var(--fallback-a, oklch(var(--a) / var(--tw-border-opacity)));
	--tw-bg-opacity: 1;
	background-color: var(--fallback-a, oklch(var(--a) / var(--tw-bg-opacity)));
	--tw-text-opacity: 1;
	color: var(--fallback-ac, oklch(var(--ac) / var(--tw-text-opacity)));
}
radio-success,
.radio-success[aria-checked='true'] {
	--tw-border-opacity: 1;
	border-color: var(--fallback-su, oklch(var(--su) / var(--tw-border-opacity)));
	--tw-bg-opacity: 1;
	background-color: var(--fallback-su, oklch(var(--su) / var(--tw-bg-opacity)));
	--tw-text-opacity: 1;
	color: var(--fallback-suc, oklch(var(--suc) / var(--tw-text-opacity)));
}
radio-warning,
.radio-warning[aria-checked='true'] {
	--tw-border-opacity: 1;
	border-color: var(--fallback-wa, oklch(var(--wa) / var(--tw-border-opacity)));
	--tw-bg-opacity: 1;
	background-color: var(--fallback-wa, oklch(var(--wa) / var(--tw-bg-opacity)));
	--tw-text-opacity: 1;
	color: var(--fallback-wac, oklch(var(--wac) / var(--tw-text-opacity)));
}
radio-info,
.radio-info[aria-checked='true'] {
	--tw-border-opacity: 1;
	border-color: var(--fallback-in, oklch(var(--in) / var(--tw-border-opacity)));
	--tw-bg-opacity: 1;
	background-color: var(--fallback-in, oklch(var(--in) / var(--tw-bg-opacity)));
	--tw-text-opacity: 1;
	color: var(--fallback-inc, oklch(var(--inc) / var(--tw-text-opacity)));
}
radio-error,
.radio-error[aria-checked='true'] {
	--tw-border-opacity: 1;
	border-color: var(--fallback-er, oklch(var(--er) / var(--tw-border-opacity)));
	--tw-bg-opacity: 1;
	background-color: var(--fallback-er, oklch(var(--er) / var(--tw-bg-opacity)));
	--tw-text-opacity: 1;
	color: var(--fallback-erc, oklch(var(--erc) / var(--tw-text-opacity)));
}
@keyframes radiomark {
	0% {
		box-shadow: 0 0 0 12px var(--fallback-b1, oklch(var(--b1) / 1)) inset,
			0 0 0 12px var(--fallback-b1, oklch(var(--b1) / 1)) inset;
	}
	50% {
		box-shadow: 0 0 0 3px var(--fallback-b1, oklch(var(--b1) / 1)) inset,
			0 0 0 3px var(--fallback-b1, oklch(var(--b1) / 1)) inset;
	}
	to {
		box-shadow: 0 0 0 4px var(--fallback-b1, oklch(var(--b1) / 1)) inset,
			0 0 0 4px var(--fallback-b1, oklch(var(--b1) / 1)) inset;
	}
}
.rating input {
	-moz-appearance: none;
	appearance: none;
	-webkit-appearance: none;
}
.rating .rating-hidden {
	width: 0.5rem;
	background-color: transparent;
}
.rating input[type='radio']:checked {
	background-image: none;
}
.rating input:checked ~ input,
.rating input[aria-checked='true'] ~ input {
	--tw-bg-opacity: 0.2;
}
.rating input:focus-visible {
	transition-property: transform;
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
	transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
	transition-duration: 0.3s;
	transform: translateY(-0.125em);
}
.rating input:active:focus {
	animation: none;
	transform: translateY(-0.125em);
}
.rating-half :where(input:not(.rating-hidden)) {
	width: 0.75rem;
}
@keyframes rating-pop {
	0% {
		transform: translateY(-0.125em);
	}
	40% {
		transform: translateY(-0.125em);
	}
	to {
		transform: translateY(0);
	}
}
select-disabled,
select,
.select[disabled] {
	cursor: not-allowed;
	--tw-border-opacity: 1;
	border-color: var(--fallback-b2, oklch(var(--b2) / var(--tw-border-opacity)));
	--tw-bg-opacity: 1;
	background-color: var(--fallback-b2, oklch(var(--b2) / var(--tw-bg-opacity)));
	color: var(--fallback-bc, oklch(var(--bc) / var(--tw-text-opacity)));
	--tw-text-opacity: 0.2;
}
select-disabled,
select,
.select[disabled]::placeholder {
	color: var(--fallback-bc, oklch(var(--bc) / var(--tw-placeholder-opacity)));
	--tw-placeholder-opacity: 0.2;
}
select-multiple,
.select[multiple],
.select[size].select:not([size='1']) {
	background-image: none;
	padding-right: 1rem;
}
[dir='rtl'] .select {
	background-position: calc(0% + 12px) calc(1px + 50%),
		calc(0% + 16px) calc(1px + 50%);
}
@keyframes skeleton {
	0% {
		background-position: 150%;
	}
	to {
		background-position: -50%;
	}
}
:where(.stats) > :not([hidden]) ~ :not([hidden]) {
	--tw-divide-x-reverse: 0;
	border-right-width: calc(1px * var(--tw-divide-x-reverse));
	border-left-width: calc(1px * calc(1 - var(--tw-divide-x-reverse)));
	--tw-divide-y-reverse: 0;
	border-top-width: calc(0px * calc(1 - var(--tw-divide-y-reverse)));
	border-bottom-width: calc(0px * var(--tw-divide-y-reverse));
}
:is([dir='rtl'] .stats > :not([hidden]) ~ :not([hidden])) {
	--tw-divide-x-reverse: 1;
}
.steps .step:before {
	top: 0;
	grid-column-start: 1;
	grid-row-start: 1;
	height: 0.5rem;
	width: 100%;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y))
		rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y))
		scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
	--tw-bg-opacity: 1;
	background-color: var(--fallback-b3, oklch(var(--b3) / var(--tw-bg-opacity)));
	--tw-text-opacity: 1;
	color: var(--fallback-bc, oklch(var(--bc) / var(--tw-text-opacity)));
	content: '';
	margin-inline-start: -100%;
}
.steps .step:after {
	content: counter(step);
	counter-increment: step;
	z-index: 1;
	position: relative;
	grid-column-start: 1;
	grid-row-start: 1;
	display: grid;
	height: 2rem;
	width: 2rem;
	place-items: center;
	place-self: center;
	border-radius: 9999px;
	--tw-bg-opacity: 1;
	background-color: var(--fallback-b3, oklch(var(--b3) / var(--tw-bg-opacity)));
	--tw-text-opacity: 1;
	color: var(--fallback-bc, oklch(var(--bc) / var(--tw-text-opacity)));
}
.steps .step:first-child:before {
	content: none;
}
.steps .step[data-content]:after {
	content: attr(data-content);
}
.steps .step-neutral + .step-neutral:before,
.steps .step-neutral:after {
	--tw-bg-opacity: 1;
	background-color: var(--fallback-n, oklch(var(--n) / var(--tw-bg-opacity)));
	--tw-text-opacity: 1;
	color: var(--fallback-nc, oklch(var(--nc) / var(--tw-text-opacity)));
}
.steps .step-primary + .step-primary:before,
.steps .step-primary:after {
	--tw-bg-opacity: 1;
	background-color: var(--fallback-p, oklch(var(--p) / var(--tw-bg-opacity)));
	--tw-text-opacity: 1;
	color: var(--fallback-pc, oklch(var(--pc) / var(--tw-text-opacity)));
}
.steps .step-secondary + .step-secondary:before,
.steps .step-secondary:after {
	--tw-bg-opacity: 1;
	background-color: var(--fallback-s, oklch(var(--s) / var(--tw-bg-opacity)));
	--tw-text-opacity: 1;
	color: var(--fallback-sc, oklch(var(--sc) / var(--tw-text-opacity)));
}
.steps .step-accent + .step-accent:before,
.steps .step-accent:after {
	--tw-bg-opacity: 1;
	background-color: var(--fallback-a, oklch(var(--a) / var(--tw-bg-opacity)));
	--tw-text-opacity: 1;
	color: var(--fallback-ac, oklch(var(--ac) / var(--tw-text-opacity)));
}
.steps .step-info + .step-info:before {
	--tw-bg-opacity: 1;
	background-color: var(--fallback-in, oklch(var(--in) / var(--tw-bg-opacity)));
}
.steps .step-info:after {
	--tw-bg-opacity: 1;
	background-color: var(--fallback-in, oklch(var(--in) / var(--tw-bg-opacity)));
	--tw-text-opacity: 1;
	color: var(--fallback-inc, oklch(var(--inc) / var(--tw-text-opacity)));
}
.steps .step-success + .step-success:before {
	--tw-bg-opacity: 1;
	background-color: var(--fallback-su, oklch(var(--su) / var(--tw-bg-opacity)));
}
.steps .step-success:after {
	--tw-bg-opacity: 1;
	background-color: var(--fallback-su, oklch(var(--su) / var(--tw-bg-opacity)));
	--tw-text-opacity: 1;
	color: var(--fallback-suc, oklch(var(--suc) / var(--tw-text-opacity)));
}
.steps .step-warning + .step-warning:before {
	--tw-bg-opacity: 1;
	background-color: var(--fallback-wa, oklch(var(--wa) / var(--tw-bg-opacity)));
}
.steps .step-warning:after {
	--tw-bg-opacity: 1;
	background-color: var(--fallback-wa, oklch(var(--wa) / var(--tw-bg-opacity)));
	--tw-text-opacity: 1;
	color: var(--fallback-wac, oklch(var(--wac) / var(--tw-text-opacity)));
}
.steps .step-error + .step-error:before {
	--tw-bg-opacity: 1;
	background-color: var(--fallback-er, oklch(var(--er) / var(--tw-bg-opacity)));
}
.steps .step-error:after {
	--tw-bg-opacity: 1;
	background-color: var(--fallback-er, oklch(var(--er) / var(--tw-bg-opacity)));
	--tw-text-opacity: 1;
	color: var(--fallback-erc, oklch(var(--erc) / var(--tw-text-opacity)));
}
.swap-rotate .swap-on,
.swap-rotate .swap-indeterminate,
.swap-rotate input:indeterminate ~ .swap-on {
	--tw-rotate: 45deg;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y))
		rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y))
		scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.swap-rotate input:checked ~ .swap-off,
.swap-active:where(.swap-rotate) .swap-off,
.swap-rotate input:indeterminate ~ .swap-off {
	--tw-rotate: -45deg;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y))
		rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y))
		scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.swap-rotate input:checked ~ .swap-on,
.swap-active:where(.swap-rotate) .swap-on,
.swap-rotate input:indeterminate ~ .swap-indeterminate {
	--tw-rotate: 0deg;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y))
		rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y))
		scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.swap-flip .swap-on,
.swap-flip .swap-indeterminate,
.swap-flip input:indeterminate ~ .swap-on {
	transform: rotateY(180deg);
	backface-visibility: hidden;
	opacity: 1;
}
.swap-flip input:checked ~ .swap-off,
.swap-active:where(.swap-flip) .swap-off,
.swap-flip input:indeterminate ~ .swap-off {
	transform: rotateY(-180deg);
	backface-visibility: hidden;
	opacity: 1;
}
.swap-flip input:checked ~ .swap-on,
.swap-active:where(.swap-flip) .swap-on,
.swap-flip input:indeterminate ~ .swap-indeterminate {
	transform: rotateY(0);
}
.tabs-lifted > .tab:focus-visible {
	border-end-end-radius: 0;
	border-end-start-radius: 0;
}
.tab.tab-active:not(.tab-disabled):not([disabled]),
tab {
	border-color: var(--fallback-bc, oklch(var(--bc) / var(--tw-border-opacity)));
	--tw-border-opacity: 1;
	--tw-text-opacity: 1;
}
tab-disabled,
.tab[disabled] {
	cursor: not-allowed;
	color: var(--fallback-bc, oklch(var(--bc) / var(--tw-text-opacity)));
	--tw-text-opacity: 0.2;
}
.tabs-bordered > .tab {
	border-color: var(--fallback-bc, oklch(var(--bc) / var(--tw-border-opacity)));
	--tw-border-opacity: 0.2;
	border-style: solid;
	border-bottom-width: calc(var(--tab-border, 1px) + 1px);
}
.tabs-lifted > .tab {
	border: var(--tab-border, 1px) solid transparent;
	border-width: 0 0 var(--tab-border, 1px) 0;
	border-start-start-radius: var(--tab-radius, 0.5rem);
	border-start-end-radius: var(--tab-radius, 0.5rem);
	border-bottom-color: var(--tab-border-color);
	padding-inline-start: var(--tab-padding, 1rem);
	padding-inline-end: var(--tab-padding, 1rem);
	padding-top: var(--tab-border, 1px);
}
.tabs-lifted > .tab.tab-active:not(.tab-disabled):not([disabled]),
.tabs-lifted > .tab:is(input:checked) {
	background-color: var(--tab-bg);
	border-width: var(--tab-border, 1px) var(--tab-border, 1px) 0
		var(--tab-border, 1px);
	border-inline-start-color: var(--tab-border-color);
	border-inline-end-color: var(--tab-border-color);
	border-top-color: var(--tab-border-color);
	padding-inline-start: calc(var(--tab-padding, 1rem) - var(--tab-border, 1px));
	padding-inline-end: calc(var(--tab-padding, 1rem) - var(--tab-border, 1px));
	padding-bottom: var(--tab-border, 1px);
	padding-top: 0;
}
.tabs-lifted > .tab.tab-active:not(.tab-disabled):not([disabled]):before,
.tabs-lifted > .tab:is(input:checked):before {
	z-index: 1;
	content: '';
	display: block;
	position: absolute;
	width: calc(100% + var(--tab-radius, 0.5rem) * 2);
	height: var(--tab-radius, 0.5rem);
	bottom: 0;
	background-size: var(--tab-radius, 0.5rem);
	background-position: top left, top right;
	background-repeat: no-repeat;
	--tab-grad: calc(69% - var(--tab-border, 1px));
	--radius-start: radial-gradient(
		circle at top left,
		transparent var(--tab-grad),
		var(--tab-border-color) calc(var(--tab-grad) + 0.25px),
		var(--tab-border-color) calc(var(--tab-grad) + var(--tab-border, 1px)),
		var(--tab-bg) calc(var(--tab-grad) + var(--tab-border, 1px) + 0.25px)
	);
	--radius-end: radial-gradient(
		circle at top right,
		transparent var(--tab-grad),
		var(--tab-border-color) calc(var(--tab-grad) + 0.25px),
		var(--tab-border-color) calc(var(--tab-grad) + var(--tab-border, 1px)),
		var(--tab-bg) calc(var(--tab-grad) + var(--tab-border, 1px) + 0.25px)
	);
	background-image: var(--radius-start), var(--radius-end);
}
.tabs-lifted
	> .tab.tab-active:not(.tab-disabled):not([disabled]):first-child:before,
.tabs-lifted > .tab:is(input:checked):first-child:before {
	background-image: var(--radius-end);
	background-position: top right;
}
[dir='rtl']
	.tabs-lifted
	> .tab.tab-active:not(.tab-disabled):not([disabled]):first-child:before,
[dir='rtl'] .tabs-lifted > .tab:is(input:checked):first-child:before {
	background-image: var(--radius-start);
	background-position: top left;
}
.tabs-lifted
	> .tab.tab-active:not(.tab-disabled):not([disabled]):last-child:before,
.tabs-lifted > .tab:is(input:checked):last-child:before {
	background-image: var(--radius-start);
	background-position: top left;
}
[dir='rtl']
	.tabs-lifted
	> .tab.tab-active:not(.tab-disabled):not([disabled]):last-child:before,
[dir='rtl'] .tabs-lifted > .tab:is(input:checked):last-child:before {
	background-image: var(--radius-end);
	background-position: top right;
}
.tabs-lifted
	> .tab-active:not(.tab-disabled):not([disabled])
	+ .tabs-lifted
	.tab-active:not(.tab-disabled):not([disabled]):before,
.tabs-lifted
	> .tab:is(input:checked)
	+ .tabs-lifted
	.tab:is(input:checked):before {
	background-image: var(--radius-end);
	background-position: top right;
}
.tabs-boxed .tab {
	border-radius: var(--rounded-btn, 0.5rem);
}
.tabs-boxed .tab-active:not(.tab-disabled):not([disabled]),
.tabs-boxed :is(input:checked) {
	--tw-bg-opacity: 1;
	background-color: var(--fallback-p, oklch(var(--p) / var(--tw-bg-opacity)));
	--tw-text-opacity: 1;
	color: var(--fallback-pc, oklch(var(--pc) / var(--tw-text-opacity)));
}
:is([dir='rtl'] .table) {
	text-align: right;
}
.table :where(th, td) {
	padding: 0.75rem 1rem;
	vertical-align: middle;
}
.table tr.active,
.table tr.active:nth-child(2n),
.table-zebra tbody tr:nth-child(2n) {
	--tw-bg-opacity: 1;
	background-color: var(--fallback-b2, oklch(var(--b2) / var(--tw-bg-opacity)));
}
.table-zebra tr.active,
.table-zebra tr.active:nth-child(2n),
.table-zebra-zebra tbody tr:nth-child(2n) {
	--tw-bg-opacity: 1;
	background-color: var(--fallback-b3, oklch(var(--b3) / var(--tw-bg-opacity)));
}
.table :where(thead, tbody) :where(tr:not(:last-child)),
.table :where(thead, tbody) :where(tr:first-child:last-child) {
	border-bottom-width: 1px;
	--tw-border-opacity: 1;
	border-bottom-color: var(
		--fallback-b2,
		oklch(var(--b2) / var(--tw-border-opacity))
	);
}
.table :where(thead, tfoot) {
	white-space: nowrap;
	font-size: 0.75rem;
	line-height: 1rem;
	font-weight: 700;
	color: var(--fallback-bc, oklch(var(--bc) / 0.6));
}
textarea-disabled,
textarea,
.textarea[disabled] {
	cursor: not-allowed;
	--tw-border-opacity: 1;
	border-color: var(--fallback-b2, oklch(var(--b2) / var(--tw-border-opacity)));
	--tw-bg-opacity: 1;
	background-color: var(--fallback-b2, oklch(var(--b2) / var(--tw-bg-opacity)));
	--tw-text-opacity: 0.2;
}
textarea-disabled,
textarea,
.textarea[disabled]::placeholder {
	color: var(--fallback-bc, oklch(var(--bc) / var(--tw-placeholder-opacity)));
	--tw-placeholder-opacity: 0.2;
}
.timeline hr {
	height: 0.25rem;
}
:where(.timeline hr) {
	--tw-bg-opacity: 1;
	background-color: var(--fallback-b3, oklch(var(--b3) / var(--tw-bg-opacity)));
}
:where(.timeline:has(.timeline-middle) hr):first-child {
	border-start-end-radius: var(--rounded-badge, 1.9rem);
	border-end-end-radius: var(--rounded-badge, 1.9rem);
	border-start-start-radius: 0px;
	border-end-start-radius: 0px;
}
:where(.timeline:has(.timeline-middle) hr):last-child {
	border-start-start-radius: var(--rounded-badge, 1.9rem);
	border-end-start-radius: var(--rounded-badge, 1.9rem);
	border-start-end-radius: 0px;
	border-end-end-radius: 0px;
}
:where(.timeline:not(:has(.timeline-middle)) :first-child hr:last-child) {
	border-start-start-radius: var(--rounded-badge, 1.9rem);
	border-end-start-radius: var(--rounded-badge, 1.9rem);
	border-start-end-radius: 0px;
	border-end-end-radius: 0px;
}
:where(.timeline:not(:has(.timeline-middle)) :last-child hr:first-child) {
	border-start-end-radius: var(--rounded-badge, 1.9rem);
	border-end-end-radius: var(--rounded-badge, 1.9rem);
	border-start-start-radius: 0px;
	border-end-start-radius: 0px;
}
.toast > * {
	animation: toast-pop 0.25s ease-out;
}
@keyframes toast-pop {
	0% {
		transform: scale(0.9);
		opacity: 0;
	}
	to {
		transform: scale(1);
		opacity: 1;
	}
}
[dir='rtl'] .toggle {
	--handleoffsetcalculator: calc(var(--handleoffset) * 1);
}
toggle,
.toggle[checked='true'],
.toggle[aria-checked='true'] {
	background-image: none;
	--handleoffsetcalculator: var(--handleoffset);
	--tw-text-opacity: 1;
	color: var(--fallback-bc, oklch(var(--bc) / var(--tw-text-opacity)));
}
[dir='rtl'] .toggle:checked,
[dir='rtl'] .toggle[checked='true'],
[dir='rtl'] .toggle[aria-checked='true'] {
	--handleoffsetcalculator: calc(var(--handleoffset) * -1);
}
[dir='rtl'] .toggle:indeterminate {
	box-shadow: calc(var(--handleoffset) / 2) 0 0 2px var(--tglbg) inset,
		calc(var(--handleoffset) / -2) 0 0 2px var(--tglbg) inset,
		0 0 0 2px var(--tglbg) inset;
}
toggle-primary,
.toggle-primary[checked='true'],
.toggle-primary[aria-checked='true'] {
	border-color: var(--fallback-p, oklch(var(--p) / var(--tw-border-opacity)));
	--tw-border-opacity: 0.1;
	--tw-bg-opacity: 1;
	background-color: var(--fallback-p, oklch(var(--p) / var(--tw-bg-opacity)));
	--tw-text-opacity: 1;
	color: var(--fallback-pc, oklch(var(--pc) / var(--tw-text-opacity)));
}
toggle-secondary,
.toggle-secondary[checked='true'],
.toggle-secondary[aria-checked='true'] {
	border-color: var(--fallback-s, oklch(var(--s) / var(--tw-border-opacity)));
	--tw-border-opacity: 0.1;
	--tw-bg-opacity: 1;
	background-color: var(--fallback-s, oklch(var(--s) / var(--tw-bg-opacity)));
	--tw-text-opacity: 1;
	color: var(--fallback-sc, oklch(var(--sc) / var(--tw-text-opacity)));
}
toggle-accent,
.toggle-accent[checked='true'],
.toggle-accent[aria-checked='true'] {
	border-color: var(--fallback-a, oklch(var(--a) / var(--tw-border-opacity)));
	--tw-border-opacity: 0.1;
	--tw-bg-opacity: 1;
	background-color: var(--fallback-a, oklch(var(--a) / var(--tw-bg-opacity)));
	--tw-text-opacity: 1;
	color: var(--fallback-ac, oklch(var(--ac) / var(--tw-text-opacity)));
}
toggle-success,
.toggle-success[checked='true'],
.toggle-success[aria-checked='true'] {
	border-color: var(--fallback-su, oklch(var(--su) / var(--tw-border-opacity)));
	--tw-border-opacity: 0.1;
	--tw-bg-opacity: 1;
	background-color: var(--fallback-su, oklch(var(--su) / var(--tw-bg-opacity)));
	--tw-text-opacity: 1;
	color: var(--fallback-suc, oklch(var(--suc) / var(--tw-text-opacity)));
}
toggle-warning,
.toggle-warning[checked='true'],
.toggle-warning[aria-checked='true'] {
	border-color: var(--fallback-wa, oklch(var(--wa) / var(--tw-border-opacity)));
	--tw-border-opacity: 0.1;
	--tw-bg-opacity: 1;
	background-color: var(--fallback-wa, oklch(var(--wa) / var(--tw-bg-opacity)));
	--tw-text-opacity: 1;
	color: var(--fallback-wac, oklch(var(--wac) / var(--tw-text-opacity)));
}
toggle-info,
.toggle-info[checked='true'],
.toggle-info[aria-checked='true'] {
	border-color: var(--fallback-in, oklch(var(--in) / var(--tw-border-opacity)));
	--tw-border-opacity: 0.1;
	--tw-bg-opacity: 1;
	background-color: var(--fallback-in, oklch(var(--in) / var(--tw-bg-opacity)));
	--tw-text-opacity: 1;
	color: var(--fallback-inc, oklch(var(--inc) / var(--tw-text-opacity)));
}
toggle-error,
.toggle-error[checked='true'],
.toggle-error[aria-checked='true'] {
	border-color: var(--fallback-er, oklch(var(--er) / var(--tw-border-opacity)));
	--tw-border-opacity: 0.1;
	--tw-bg-opacity: 1;
	background-color: var(--fallback-er, oklch(var(--er) / var(--tw-bg-opacity)));
	--tw-text-opacity: 1;
	color: var(--fallback-erc, oklch(var(--erc) / var(--tw-text-opacity)));
}
:root .prose {
	--tw-prose-body: var(--fallback-bc, oklch(var(--bc) / 0.8));
	--tw-prose-headings: var(--fallback-bc, oklch(var(--bc) / 1));
	--tw-prose-lead: var(--fallback-bc, oklch(var(--bc) / 1));
	--tw-prose-links: var(--fallback-bc, oklch(var(--bc) / 1));
	--tw-prose-bold: var(--fallback-bc, oklch(var(--bc) / 1));
	--tw-prose-counters: var(--fallback-bc, oklch(var(--bc) / 1));
	--tw-prose-bullets: var(--fallback-bc, oklch(var(--bc) / 0.5));
	--tw-prose-hr: var(--fallback-bc, oklch(var(--bc) / 0.2));
	--tw-prose-quotes: var(--fallback-bc, oklch(var(--bc) / 1));
	--tw-prose-quote-borders: var(--fallback-bc, oklch(var(--bc) / 0.2));
	--tw-prose-captions: var(--fallback-bc, oklch(var(--bc) / 0.5));
	--tw-prose-code: var(--fallback-bc, oklch(var(--bc) / 1));
	--tw-prose-pre-code: var(--fallback-nc, oklch(var(--nc) / 1));
	--tw-prose-pre-bg: var(--fallback-n, oklch(var(--n) / 1));
	--tw-prose-th-borders: var(--fallback-bc, oklch(var(--bc) / 0.5));
	--tw-prose-td-borders: var(--fallback-bc, oklch(var(--bc) / 0.2));
}
.prose :where(code):not(:where([class~='not-prose'] *, pre *)) {
	padding: 1px 8px;
	border-radius: var(--rounded-badge);
	font-weight: initial;
	background-color: var(--fallback-bc, oklch(var(--bc) / 0.1));
}
.prose
	:where(code):not(:where([class~='not-prose'], [class~='not-prose'] *)):before,
.prose
	:where(code):not(:where([class~='not-prose'], [class~='not-prose'] *)):after {
	display: none;
}
.prose pre code {
	border-radius: 0;
	padding: 0;
}
.prose :where(tbody tr, thead):not(:where([class~='not-prose'] *)) {
	border-bottom-color: var(--fallback-bc, oklch(var(--bc) / 0.2));
}
glass,
.glass.btn-active {
	border: none;
	-webkit-backdrop-filter: blur(var(--glass-blur, 40px));
	backdrop-filter: blur(var(--glass-blur, 40px));
	background-color: transparent;
	background-image: linear-gradient(
			135deg,
			rgb(255 255 255 / var(--glass-opacity, 30%)),
			#0000
		),
		linear-gradient(
			var(--glass-reflex-degree, 100deg),
			rgb(255 255 255 / var(--glass-reflex-opacity, 10%)) 25%,
			rgb(0 0 0 / 0%) 25%
		);
	box-shadow: 0 0 0 1px rgb(255 255 255 / var(--glass-border-opacity, 10%))
			inset,
		0 0 0 2px #0000000d;
	text-shadow: 0 1px rgb(0 0 0 / var(--glass-text-shadow-opacity, 5%));
}
@media (hover: hover) {
	.glass.btn-active {
		border: none;
		-webkit-backdrop-filter: blur(var(--glass-blur, 40px));
		backdrop-filter: blur(var(--glass-blur, 40px));
		background-color: transparent;
		background-image: linear-gradient(
				135deg,
				rgb(255 255 255 / var(--glass-opacity, 30%)),
				#0000
			),
			linear-gradient(
				var(--glass-reflex-degree, 100deg),
				rgb(255 255 255 / var(--glass-reflex-opacity, 10%)) 25%,
				rgb(0 0 0 / 0%) 25%
			);
		box-shadow: 0 0 0 1px rgb(255 255 255 / var(--glass-border-opacity, 10%))
				inset,
			0 0 0 2px #0000000d;
		text-shadow: 0 1px rgb(0 0 0 / var(--glass-text-shadow-opacity, 5%));
	}
}
.artboard.phone {
	width: 320px;
}
.artboard.phone-1 {
	width: 320px;
	height: 568px;
}
.artboard.phone-1.horizontal,
.artboard.phone-1.artboard-horizontal {
	width: 568px;
	height: 320px;
}
.artboard.phone-2 {
	width: 375px;
	height: 667px;
}
.artboard.phone-2.horizontal,
.artboard.phone-2.artboard-horizontal {
	width: 667px;
	height: 375px;
}
.artboard.phone-3 {
	width: 414px;
	height: 736px;
}
.artboard.phone-3.horizontal,
.artboard.phone-3.artboard-horizontal {
	width: 736px;
	height: 414px;
}
.artboard.phone-4 {
	width: 375px;
	height: 812px;
}
.artboard.phone-4.horizontal,
.artboard.phone-4.artboard-horizontal {
	width: 812px;
	height: 375px;
}
.artboard.phone-5 {
	width: 414px;
	height: 896px;
}
.artboard.phone-5.horizontal,
.artboard.phone-5.artboard-horizontal {
	width: 896px;
	height: 414px;
}
.artboard.phone-6 {
	width: 320px;
	height: 1024px;
}
.artboard.phone-6.horizontal,
.artboard.phone-6.artboard-horizontal {
	width: 1024px;
	height: 320px;
}
.btm-nav-xs > *:where(.active) {
	border-top-width: 1px;
}
.btm-nav-xs .btm-nav-label {
	font-size: 0.75rem;
	line-height: 1rem;
}
.btm-nav-sm > *:where(.active) {
	border-top-width: 2px;
}
.btm-nav-sm .btm-nav-label {
	font-size: 0.75rem;
	line-height: 1rem;
}
.btm-nav-md > *:where(.active) {
	border-top-width: 2px;
}
.btm-nav-md .btm-nav-label {
	font-size: 0.875rem;
	line-height: 1.25rem;
}
.btm-nav-lg > *:where(.active) {
	border-top-width: 4px;
}
.btm-nav-lg .btm-nav-label {
	font-size: 1rem;
	line-height: 1.5rem;
}
.btn-square:where(.btn-xs) {
	height: 1.5rem;
	width: 1.5rem;
	padding: 0;
}
.btn-square:where(.btn-sm) {
	height: 2rem;
	width: 2rem;
	padding: 0;
}
.btn-square:where(.btn-md) {
	height: 3rem;
	width: 3rem;
	padding: 0;
}
.btn-square:where(.btn-lg) {
	height: 4rem;
	width: 4rem;
	padding: 0;
}
.btn-circle:where(.btn-xs) {
	height: 1.5rem;
	width: 1.5rem;
	border-radius: 9999px;
	padding: 0;
}
.btn-circle:where(.btn-sm) {
	height: 2rem;
	width: 2rem;
	border-radius: 9999px;
	padding: 0;
}
.btn-circle:where(.btn-md) {
	height: 3rem;
	width: 3rem;
	border-radius: 9999px;
	padding: 0;
}
.btn-circle:where(.btn-lg) {
	height: 4rem;
	width: 4rem;
	border-radius: 9999px;
	padding: 0;
}
.card-side :where(figure:first-child) {
	overflow: hidden;
	border-start-start-radius: inherit;
	border-start-end-radius: unset;
	border-end-start-radius: inherit;
	border-end-end-radius: unset;
}
.card-side :where(figure:last-child) {
	overflow: hidden;
	border-start-start-radius: unset;
	border-start-end-radius: inherit;
	border-end-start-radius: unset;
	border-end-end-radius: inherit;
}
.card-side figure > * {
	max-width: unset;
}
:where(.card-side figure > *) {
	width: 100%;
	height: 100%;
	object-fit: cover;
}
[type='checkbox'].checkbox-xs {
	height: 1rem;
	width: 1rem;
}
[type='checkbox'].checkbox-sm {
	height: 1.25rem;
	width: 1.25rem;
}
[type='checkbox'].checkbox-md {
	height: 1.5rem;
	width: 1.5rem;
}
[type='checkbox'].checkbox-lg {
	height: 2rem;
	width: 2rem;
}
.drawer-open > .drawer-toggle {
	display: none;
}
.drawer-open > .drawer-toggle ~ .drawer-side {
	pointer-events: auto;
	visibility: visible;
	position: sticky;
	display: block;
	width: auto;
	overscroll-behavior: auto;
}
.drawer-open > .drawer-toggle ~ .drawer-side > *:not(.drawer-overlay) {
	transform: translate(0);
}
[dir='rtl']
	.drawer-open
	> .drawer-toggle
	~ .drawer-side
	> *:not(.drawer-overlay) {
	transform: translate(0);
}
.drawer-open > .drawer-toggle:checked ~ .drawer-side {
	pointer-events: auto;
	visibility: visible;
}
.drawer-open > .drawer-side {
	overflow-y: auto;
}
html:has(.drawer-toggle:checked) {
	overflow-y: hidden;
	scrollbar-gutter: stable;
}
html:has(.drawer-open.drawer-open) {
	overflow-y: auto;
	scrollbar-gutter: auto;
}
:is([dir='rtl'] .indicator :where(.indicator-item)) {
	--tw-translate-x: -50%;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y))
		rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y))
		scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.indicator :where(.indicator-item.indicator-start) {
	inset-inline-end: auto;
	inset-inline-start: 0px;
	--tw-translate-x: -50%;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y))
		rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y))
		scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
:is([dir='rtl'] .indicator :where(.indicator-item.indicator-start)) {
	--tw-translate-x: 50%;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y))
		rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y))
		scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.indicator :where(.indicator-item.indicator-center) {
	inset-inline-end: 50%;
	inset-inline-start: 50%;
	--tw-translate-x: -50%;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y))
		rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y))
		scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
:is([dir='rtl'] .indicator :where(.indicator-item.indicator-center)) {
	--tw-translate-x: 50%;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y))
		rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y))
		scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.indicator :where(.indicator-item.indicator-end) {
	inset-inline-end: 0px;
	inset-inline-start: auto;
	--tw-translate-x: 50%;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y))
		rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y))
		scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
:is([dir='rtl'] .indicator :where(.indicator-item.indicator-end)) {
	--tw-translate-x: -50%;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y))
		rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y))
		scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.indicator :where(.indicator-item.indicator-bottom) {
	bottom: 0;
	top: auto;
	--tw-translate-y: 50%;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y))
		rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y))
		scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.indicator :where(.indicator-item.indicator-middle) {
	bottom: 50%;
	top: 50%;
	--tw-translate-y: -50%;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y))
		rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y))
		scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.indicator :where(.indicator-item.indicator-top) {
	bottom: auto;
	top: 0;
	--tw-translate-y: -50%;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y))
		rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y))
		scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.join.join-vertical {
	flex-direction: column;
}
.join.join-vertical .join-item:first-child:not(:last-child),
.join.join-vertical *:first-child:not(:last-child) .join-item {
	border-end-start-radius: 0;
	border-end-end-radius: 0;
	border-start-start-radius: inherit;
	border-start-end-radius: inherit;
}
.join.join-vertical .join-item:last-child:not(:first-child),
.join.join-vertical *:last-child:not(:first-child) .join-item {
	border-start-start-radius: 0;
	border-start-end-radius: 0;
	border-end-start-radius: inherit;
	border-end-end-radius: inherit;
}
.join.join-horizontal {
	flex-direction: row;
}
.join.join-horizontal .join-item:first-child:not(:last-child),
.join.join-horizontal *:first-child:not(:last-child) .join-item {
	border-end-end-radius: 0;
	border-start-end-radius: 0;
	border-end-start-radius: inherit;
	border-start-start-radius: inherit;
}
.join.join-horizontal .join-item:last-child:not(:first-child),
.join.join-horizontal *:last-child:not(:first-child) .join-item {
	border-end-start-radius: 0;
	border-start-start-radius: 0;
	border-end-end-radius: inherit;
	border-start-end-radius: inherit;
}
.menu-horizontal > li:not(.menu-title) > details > ul {
	position: absolute;
	margin-inline-start: 0px;
	margin-top: 1rem;
	padding-top: 0.5rem;
	padding-bottom: 0.5rem;
	padding-inline-end: 0.5rem;
}
.menu-vertical > li:not(.menu-title) > details > ul {
	position: relative;
	margin-inline-start: 1rem;
	margin-top: 0;
	padding-top: 0;
	padding-bottom: 0;
	padding-inline-end: 0px;
}
[type='radio'].radio-xs {
	height: 1rem;
	width: 1rem;
}
[type='radio'].radio-sm {
	height: 1.25rem;
	width: 1.25rem;
}
[type='radio'].radio-md {
	height: 1.5rem;
	width: 1.5rem;
}
[type='radio'].radio-lg {
	height: 2rem;
	width: 2rem;
}
.rating-xs input {
	height: 0.75rem;
	width: 0.75rem;
}
.rating-sm input {
	height: 1rem;
	width: 1rem;
}
.rating-md input {
	height: 1.5rem;
	width: 1.5rem;
}
.rating-lg input {
	height: 2.5rem;
	width: 2.5rem;
}
.rating-half.rating-xs input:not(.rating-hidden) {
	width: 0.375rem;
}
.rating-half.rating-sm input:not(.rating-hidden) {
	width: 0.5rem;
}
.rating-half.rating-md input:not(.rating-hidden) {
	width: 0.75rem;
}
.rating-half.rating-lg input:not(.rating-hidden) {
	width: 1.25rem;
}
[dir='rtl'] .select-md {
	padding-left: 2.5rem;
	padding-right: 1rem;
}
[dir='rtl'] .select-lg {
	padding-left: 2rem;
	padding-right: 1.5rem;
}
[dir='rtl'] .select-sm {
	padding-left: 2rem;
	padding-right: 0.75rem;
}
[dir='rtl'] .select-xs {
	padding-left: 2rem;
	padding-right: 0.5rem;
}
.steps-horizontal .step {
	display: grid;
	grid-template-columns: repeat(1, minmax(0, 1fr));
	grid-template-rows: repeat(2, minmax(0, 1fr));
	place-items: center;
	text-align: center;
	grid-template-rows: 40px 1fr;
	grid-template-columns: auto;
	min-width: 4rem;
}
.steps-vertical .step {
	display: grid;
	grid-template-columns: repeat(2, minmax(0, 1fr));
	grid-template-rows: repeat(1, minmax(0, 1fr));
	gap: 0.5rem;
	grid-template-columns: 40px 1fr;
	grid-template-rows: auto;
	min-height: 4rem;
	justify-items: start;
}
.tabs-md :where(.tab) {
	height: 2rem;
	font-size: 0.875rem;
	line-height: 1.25rem;
	line-height: 2;
	--tab-padding: 1rem;
}
.tabs-lg :where(.tab) {
	height: 3rem;
	font-size: 1.125rem;
	line-height: 1.75rem;
	line-height: 2;
	--tab-padding: 1.25rem;
}
.tabs-sm :where(.tab) {
	height: 1.5rem;
	font-size: 0.875rem;
	line-height: 0.75rem;
	--tab-padding: 0.75rem;
}
.tabs-xs :where(.tab) {
	height: 1.25rem;
	font-size: 0.75rem;
	line-height: 0.75rem;
	--tab-padding: 0.5rem;
}
timeline-compact,
.timeline-horizontal.timeline-compact {
	--timeline-row-start: 0;
}
.timeline-compact .timeline-start,
.timeline-horizontal.timeline-compact .timeline-start {
	grid-column-start: 1;
	grid-column-end: 4;
	grid-row-start: 3;
	grid-row-end: 4;
	margin: 0.25rem;
	align-self: flex-start;
	justify-self: center;
}
.timeline-compact li:has(.timeline-start) .timeline-end,
.timeline-horizontal.timeline-compact li:has(.timeline-start) .timeline-end {
	grid-column-start: none;
	grid-row-start: auto;
}
.timeline-vertical.timeline-compact > li {
	--timeline-col-start: 0;
}
.timeline-vertical.timeline-compact .timeline-start {
	grid-column-start: 3;
	grid-column-end: 4;
	grid-row-start: 1;
	grid-row-end: 4;
	align-self: center;
	justify-self: start;
}
.timeline-vertical.timeline-compact li:has(.timeline-start) .timeline-end {
	grid-column-start: auto;
	grid-row-start: none;
}
:where(.timeline-vertical > li) {
	--timeline-row-start: minmax(0, 1fr);
	--timeline-row-end: minmax(0, 1fr);
	justify-items: center;
}
.timeline-vertical > li > hr {
	height: 100%;
	width: 0.25rem;
}
:where(.timeline-vertical > li > hr):first-child {
	grid-column-start: 2;
	grid-row-start: 1;
}
:where(.timeline-vertical > li > hr):last-child {
	grid-column-start: 2;
	grid-column-end: auto;
	grid-row-start: 3;
	grid-row-end: none;
}
.timeline-vertical .timeline-start {
	grid-column-start: 1;
	grid-column-end: 2;
	grid-row-start: 1;
	grid-row-end: 4;
	align-self: center;
	justify-self: end;
}
.timeline-vertical .timeline-end {
	grid-column-start: 3;
	grid-column-end: 4;
	grid-row-start: 1;
	grid-row-end: 4;
	align-self: center;
	justify-self: start;
}
.timeline-vertical:where(.timeline-snap-icon) > li {
	--timeline-col-start: minmax(0, 1fr);
	--timeline-row-start: 0.5rem;
}
.timeline-horizontal > li > hr {
	width: 100%;
	height: 0.25rem;
}
:where(.timeline-horizontal > li) {
	align-items: center;
}
:where(.timeline-horizontal > li > hr):first-child {
	grid-column-start: 1;
	grid-row-start: 2;
}
:where(.timeline-horizontal > li > hr):last-child {
	grid-column-start: 3;
	grid-column-end: none;
	grid-row-start: 2;
	grid-row-end: auto;
}
.timeline-horizontal .timeline-start {
	grid-column-start: 1;
	grid-column-end: 4;
	grid-row-start: 1;
	grid-row-end: 2;
	align-self: flex-end;
	justify-self: center;
}
.timeline-horizontal .timeline-end {
	grid-column-start: 1;
	grid-column-end: 4;
	grid-row-start: 3;
	grid-row-end: 4;
	align-self: flex-start;
	justify-self: center;
}
:where(.timeline-snap-icon) > li,
.timeline-horizontal:where(.timeline-snap-icon) > li {
	--timeline-col-start: 0.5rem;
	--timeline-row-start: minmax(0, 1fr);
}
:where(.toast) {
	bottom: 0;
	inset-inline-end: 0px;
	inset-inline-start: auto;
	top: auto;
	--tw-translate-x: 0px;
	--tw-translate-y: 0px;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y))
		rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y))
		scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.toast:where(.toast-start) {
	inset-inline-end: auto;
	inset-inline-start: 0px;
	--tw-translate-x: 0px;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y))
		rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y))
		scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.toast:where(.toast-center) {
	inset-inline-end: 50%;
	inset-inline-start: 50%;
	--tw-translate-x: -50%;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y))
		rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y))
		scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
:is([dir='rtl'] .toast:where(.toast-center)) {
	--tw-translate-x: 50%;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y))
		rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y))
		scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.toast:where(.toast-end) {
	inset-inline-end: 0px;
	inset-inline-start: auto;
	--tw-translate-x: 0px;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y))
		rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y))
		scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.toast:where(.toast-bottom) {
	bottom: 0;
	top: auto;
	--tw-translate-y: 0px;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y))
		rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y))
		scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.toast:where(.toast-middle) {
	bottom: auto;
	top: 50%;
	--tw-translate-y: -50%;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y))
		rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y))
		scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.toast:where(.toast-top) {
	bottom: auto;
	top: 0;
	--tw-translate-y: 0px;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y))
		rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y))
		scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
[type='checkbox'].toggle-xs {
	--handleoffset: 0.5rem;
	height: 1rem;
	width: 1.5rem;
}
[type='checkbox'].toggle-sm {
	--handleoffset: 0.75rem;
	height: 1.25rem;
	width: 2rem;
}
[type='checkbox'].toggle-md {
	--handleoffset: 1.5rem;
	height: 1.5rem;
	width: 3rem;
}
[type='checkbox'].toggle-lg {
	--handleoffset: 2rem;
	height: 2rem;
	width: 4rem;
}
.avatar.online:before {
	content: '';
	position: absolute;
	z-index: 10;
	display: block;
	border-radius: 9999px;
	--tw-bg-opacity: 1;
	background-color: var(--fallback-su, oklch(var(--su) / var(--tw-bg-opacity)));
	outline-style: solid;
	outline-width: 2px;
	outline-color: var(--fallback-b1, oklch(var(--b1) / 1));
	width: 15%;
	height: 15%;
	top: 7%;
	right: 7%;
}
.avatar.offline:before {
	content: '';
	position: absolute;
	z-index: 10;
	display: block;
	border-radius: 9999px;
	--tw-bg-opacity: 1;
	background-color: var(--fallback-b3, oklch(var(--b3) / var(--tw-bg-opacity)));
	outline-style: solid;
	outline-width: 2px;
	outline-color: var(--fallback-b1, oklch(var(--b1) / 1));
	width: 15%;
	height: 15%;
	top: 7%;
	right: 7%;
}
.card-compact .card-body {
	padding: 1rem;
	font-size: 0.875rem;
	line-height: 1.25rem;
}
.card-compact .card-title {
	margin-bottom: 0.25rem;
}
.card-normal .card-body {
	padding: var(--padding-card, 2rem);
	font-size: 1rem;
	line-height: 1.5rem;
}
.card-normal .card-title {
	margin-bottom: 0.75rem;
}
.drawer-open > .drawer-toggle ~ .drawer-side > .drawer-overlay {
	cursor: default;
	background-color: transparent;
}
.join.join-vertical > :where(*:not(:first-child)) {
	margin-left: 0;
	margin-right: 0;
	margin-top: -1px;
}
.join.join-horizontal > :where(*:not(:first-child)) {
	margin-top: 0;
	margin-bottom: 0;
	margin-inline-start: -1px;
}
.menu-horizontal > li > details > ul:before {
	content: none;
}
:where(.menu-horizontal > li:not(.menu-title) > details > ul) {
	border-radius: var(--rounded-box, 1rem);
	--tw-bg-opacity: 1;
	background-color: var(--fallback-b1, oklch(var(--b1) / var(--tw-bg-opacity)));
	--tw-shadow: 0 20px 25px -5px rgb(0 0 0 / 0.1),
		0 8px 10px -6px rgb(0 0 0 / 0.1);
	--tw-shadow-colored: 0 20px 25px -5px var(--tw-shadow-color),
		0 8px 10px -6px var(--tw-shadow-color);
	box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),
		var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.menu-xs :where(li:not(.menu-title) > *:not(ul, details, .menu-title)),
.menu-xs :where(li:not(.menu-title) > details > summary:not(.menu-title)) {
	border-radius: 0.25rem;
	padding: 0.25rem 0.5rem;
	font-size: 0.75rem;
	line-height: 1rem;
}
.menu-xs .menu-title {
	padding: 0.25rem 0.5rem;
}
.menu-sm :where(li:not(.menu-title) > *:not(ul, details, .menu-title)),
.menu-sm :where(li:not(.menu-title) > details > summary:not(.menu-title)) {
	border-radius: var(--rounded-btn, 0.5rem);
	padding: 0.25rem 0.75rem;
	font-size: 0.875rem;
	line-height: 1.25rem;
}
.menu-sm .menu-title {
	padding: 0.5rem 0.75rem;
}
.menu-md :where(li:not(.menu-title) > *:not(ul, details, .menu-title)),
.menu-md :where(li:not(.menu-title) > details > summary:not(.menu-title)) {
	border-radius: var(--rounded-btn, 0.5rem);
	padding: 0.5rem 1rem;
	font-size: 0.875rem;
	line-height: 1.25rem;
}
.menu-md .menu-title {
	padding: 0.5rem 1rem;
}
.menu-lg :where(li:not(.menu-title) > *:not(ul, details, .menu-title)),
.menu-lg :where(li:not(.menu-title) > details > summary:not(.menu-title)) {
	border-radius: var(--rounded-btn, 0.5rem);
	padding: 0.75rem 1.5rem;
	font-size: 1.125rem;
	line-height: 1.75rem;
}
.menu-lg .menu-title {
	padding: 0.75rem 1.5rem;
}
.modal-top :where(.modal-box) {
	width: 100%;
	max-width: none;
	--tw-translate-y: -2.5rem;
	--tw-scale-x: 1;
	--tw-scale-y: 1;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y))
		rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y))
		scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
	border-bottom-right-radius: var(--rounded-box, 1rem);
	border-bottom-left-radius: var(--rounded-box, 1rem);
	border-top-left-radius: 0;
	border-top-right-radius: 0;
}
.modal-middle :where(.modal-box) {
	width: 91.666667%;
	max-width: 32rem;
	--tw-translate-y: 0px;
	--tw-scale-x: 0.9;
	--tw-scale-y: 0.9;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y))
		rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y))
		scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
	border-top-left-radius: var(--rounded-box, 1rem);
	border-top-right-radius: var(--rounded-box, 1rem);
	border-bottom-right-radius: var(--rounded-box, 1rem);
	border-bottom-left-radius: var(--rounded-box, 1rem);
}
.modal-bottom :where(.modal-box) {
	width: 100%;
	max-width: none;
	--tw-translate-y: 2.5rem;
	--tw-scale-x: 1;
	--tw-scale-y: 1;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y))
		rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y))
		scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
	border-top-left-radius: var(--rounded-box, 1rem);
	border-top-right-radius: var(--rounded-box, 1rem);
	border-bottom-right-radius: 0;
	border-bottom-left-radius: 0;
}
.stats-horizontal > :not([hidden]) ~ :not([hidden]) {
	--tw-divide-x-reverse: 0;
	border-right-width: calc(1px * var(--tw-divide-x-reverse));
	border-left-width: calc(1px * calc(1 - var(--tw-divide-x-reverse)));
	--tw-divide-y-reverse: 0;
	border-top-width: calc(0px * calc(1 - var(--tw-divide-y-reverse)));
	border-bottom-width: calc(0px * var(--tw-divide-y-reverse));
}
:is([dir='rtl'] .stats-horizontal) {
	--tw-divide-x-reverse: 1;
}
.stats-vertical > :not([hidden]) ~ :not([hidden]) {
	--tw-divide-x-reverse: 0;
	border-right-width: calc(0px * var(--tw-divide-x-reverse));
	border-left-width: calc(0px * calc(1 - var(--tw-divide-x-reverse)));
	--tw-divide-y-reverse: 0;
	border-top-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
	border-bottom-width: calc(1px * var(--tw-divide-y-reverse));
}
.steps-horizontal .step:before {
	height: 0.5rem;
	width: 100%;
	--tw-translate-x: 0px;
	--tw-translate-y: 0px;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y))
		rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y))
		scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
	content: '';
	margin-inline-start: -100%;
}
:is([dir='rtl'] .steps-horizontal .step):before {
	--tw-translate-x: 0px;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y))
		rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y))
		scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.steps-vertical .step:before {
	height: 100%;
	width: 0.5rem;
	--tw-translate-x: -50%;
	--tw-translate-y: -50%;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y))
		rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y))
		scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
	margin-inline-start: 50%;
}
:is([dir='rtl'] .steps-vertical .step):before {
	--tw-translate-x: 50%;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y))
		rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y))
		scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.table-xs :not(thead):not(tfoot) tr {
	font-size: 0.75rem;
	line-height: 1rem;
}
.table-xs :where(th, td) {
	padding: 0.25rem 0.5rem;
}
.table-sm :not(thead):not(tfoot) tr {
	font-size: 0.875rem;
	line-height: 1.25rem;
}
.table-sm :where(th, td) {
	padding: 0.5rem 0.75rem;
}
.table-md :not(thead):not(tfoot) tr {
	font-size: 0.875rem;
	line-height: 1.25rem;
}
.table-md :where(th, td) {
	padding: 0.75rem 1rem;
}
.table-lg :not(thead):not(tfoot) tr {
	font-size: 1rem;
	line-height: 1.5rem;
}
.table-lg :where(th, td) {
	padding: 1rem 1.5rem;
}
:where(.timeline-vertical:has(.timeline-middle) > li > hr):first-child {
	border-bottom-right-radius: var(--rounded-badge, 1.9rem);
	border-bottom-left-radius: var(--rounded-badge, 1.9rem);
	border-top-left-radius: 0;
	border-top-right-radius: 0;
}
:where(.timeline-vertical:has(.timeline-middle) > li > hr):last-child {
	border-top-left-radius: var(--rounded-badge, 1.9rem);
	border-top-right-radius: var(--rounded-badge, 1.9rem);
	border-bottom-right-radius: 0;
	border-bottom-left-radius: 0;
}
:where(
		.timeline-vertical:not(:has(.timeline-middle)) :first-child > hr:last-child
	) {
	border-top-left-radius: var(--rounded-badge, 1.9rem);
	border-top-right-radius: var(--rounded-badge, 1.9rem);
	border-bottom-right-radius: 0;
	border-bottom-left-radius: 0;
}
:where(
		.timeline-vertical:not(:has(.timeline-middle)) :last-child > hr:first-child
	) {
	border-bottom-right-radius: var(--rounded-badge, 1.9rem);
	border-bottom-left-radius: var(--rounded-badge, 1.9rem);
	border-top-left-radius: 0;
	border-top-right-radius: 0;
}
:where(.timeline-horizontal:has(.timeline-middle) > li > hr):first-child {
	border-start-end-radius: var(--rounded-badge, 1.9rem);
	border-end-end-radius: var(--rounded-badge, 1.9rem);
	border-start-start-radius: 0px;
	border-end-start-radius: 0px;
}
:where(.timeline-horizontal:has(.timeline-middle) > li > hr):last-child {
	border-start-start-radius: var(--rounded-badge, 1.9rem);
	border-end-start-radius: var(--rounded-badge, 1.9rem);
	border-start-end-radius: 0px;
	border-end-end-radius: 0px;
}
:where(
		.timeline-horizontal:not(:has(.timeline-middle))
			:first-child
			> hr:last-child
	) {
	border-start-start-radius: var(--rounded-badge, 1.9rem);
	border-end-start-radius: var(--rounded-badge, 1.9rem);
	border-start-end-radius: 0px;
	border-end-end-radius: 0px;
}
:where(
		.timeline-horizontal:not(:has(.timeline-middle))
			:last-child
			> hr:first-child
	) {
	border-start-end-radius: var(--rounded-badge, 1.9rem);
	border-end-end-radius: var(--rounded-badge, 1.9rem);
	border-start-start-radius: 0px;
	border-end-start-radius: 0px;
}
.tooltip.tooltip-open:before {
	opacity: 1;
	transition-delay: 75ms;
}
.tooltip.tooltip-open:after {
	opacity: 1;
	transition-delay: 75ms;
}
.tooltip:not([data-tip]):hover:before,
.tooltip:not([data-tip]):hover:after {
	visibility: hidden;
	opacity: 0;
}
.avatar {
	position: relative;
	display: inline-flex;
}
@media (hover: hover) {
	.tabundefined {
		--tw-text-opacity: 1;
	}
}
.btn {
	display: inline-flex;
	height: 3rem;
	min-height: 3rem;
	flex-shrink: 0;
	cursor: pointer;
	-webkit-user-select: none;
	user-select: none;
	flex-wrap: wrap;
	align-items: center;
	justify-content: center;
	border-radius: var(--rounded-btn, 0.5rem);
	border-color: transparent;
	border-color: oklch(var(--btn-color, var(--b2)) / var(--tw-border-opacity));
	padding-left: 1rem;
	padding-right: 1rem;
	text-align: center;
	font-size: 0.875rem;
	line-height: 1em;
	gap: 0.5rem;
	font-weight: 600;
	text-decoration-line: none;
	transition-duration: 0.2s;
	transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
	border-width: var(--border-btn, 1px);
	animation: button-pop var(--animation-btn, 0.25s) ease-out;
	transition-property: color, background-color, border-color, opacity,
		box-shadow, transform;
	--tw-text-opacity: 1;
	color: var(--fallback-bc, oklch(var(--bc) / var(--tw-text-opacity)));
	--tw-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);
	--tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
	box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),
		var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
	outline-color: var(--fallback-bc, oklch(var(--bc) / 1));
	background-color: oklch(var(--btn-color, var(--b2)) / var(--tw-bg-opacity));
	--tw-bg-opacity: 1;
	--tw-border-opacity: 1;
}
.card {
	position: relative;
	display: flex;
	flex-direction: column;
	border-radius: var(--rounded-box, 1rem);
}
.card:focus {
	outline: 2px solid transparent;
	outline-offset: 2px;
}
.card-body {
	display: flex;
	flex: 1 1 auto;
	flex-direction: column;
	padding: var(--padding-card, 2rem);
	gap: 0.5rem;
}
.chat {
	display: grid;
	grid-template-columns: repeat(2, minmax(0, 1fr));
	column-gap: 0.75rem;
	padding-top: 0.25rem;
	padding-bottom: 0.25rem;
}
.chat-image {
	grid-row: span 2 / span 2;
	align-self: flex-end;
}
.chat-bubble {
	position: relative;
	display: block;
	width: fit-content;
	padding: 0.5rem 1rem;
	max-width: 90%;
	border-radius: var(--rounded-box, 1rem);
	min-height: 2.75rem;
	min-width: 2.75rem;
	--tw-bg-opacity: 1;
	background-color: var(--fallback-n, oklch(var(--n) / var(--tw-bg-opacity)));
	--tw-text-opacity: 1;
	color: var(--fallback-nc, oklch(var(--nc) / var(--tw-text-opacity)));
}
.chat-bubble:before {
	position: absolute;
	bottom: 0;
	height: 0.75rem;
	width: 0.75rem;
	background-color: inherit;
	content: '';
	-webkit-mask-size: contain;
	mask-size: contain;
	-webkit-mask-repeat: no-repeat;
	mask-repeat: no-repeat;
	-webkit-mask-position: center;
	mask-position: center;
}
.chat-start {
	place-items: start;
	grid-template-columns: auto 1fr;
}
.checkbox {
	flex-shrink: 0;
	--chkbg: var(--fallback-bc, oklch(var(--bc) / 1));
	--chkfg: var(--fallback-b1, oklch(var(--b1) / 1));
	height: 1.5rem;
	width: 1.5rem;
	cursor: pointer;
	-webkit-appearance: none;
	-moz-appearance: none;
	appearance: none;
	border-radius: var(--rounded-btn, 0.5rem);
	border-width: 1px;
	border-color: var(--fallback-bc, oklch(var(--bc) / var(--tw-border-opacity)));
	--tw-border-opacity: 0.2;
}
.dropdown {
	position: relative;
	display: inline-block;
}
@media (hover: hover) {
	.btnundefined {
		--tw-border-opacity: 1;
		border-color: var(
			--fallback-b3,
			oklch(var(--b3) / var(--tw-border-opacity))
		);
		--tw-bg-opacity: 1;
		background-color: var(
			--fallback-b3,
			oklch(var(--b3) / var(--tw-bg-opacity))
		);
	}
	@supports not (color: oklch(0 0 0)) {
		.btnundefined {
			background-color: var(--btn-color, var(--fallback-b2));
			border-color: var(--btn-color, var(--fallback-b2));
		}
	}
	.btn:disabled:hover {
		--tw-border-opacity: 0;
		background-color: var(--fallback-n, oklch(var(--n) / var(--tw-bg-opacity)));
		--tw-bg-opacity: 0.2;
		color: var(--fallback-bc, oklch(var(--bc) / var(--tw-text-opacity)));
		--tw-text-opacity: 0.2;
	}
}
.link {
	cursor: pointer;
	text-decoration-line: underline;
}
.menu {
	display: flex;
	flex-direction: column;
	flex-wrap: wrap;
	font-size: 0.875rem;
	line-height: 1.25rem;
	padding: 0.5rem;
}
.modal {
	pointer-events: none;
	position: fixed;
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
	margin: 0;
	display: grid;
	height: 100%;
	max-height: none;
	width: 100%;
	max-width: none;
	justify-items: center;
	padding: 0;
	opacity: 0;
	overscroll-behavior: contain;
	z-index: 999;
	background-color: transparent;
	color: inherit;
	transition-duration: 0.2s;
	transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
	transition-property: transform, opacity, visibility;
	overflow-y: hidden;
}
.modal-box {
	max-height: calc(100vh - 5em);
	grid-column-start: 1;
	grid-row-start: 1;
	width: 91.666667%;
	max-width: 32rem;
	--tw-scale-x: 0.9;
	--tw-scale-y: 0.9;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y))
		rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y))
		scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
	border-bottom-right-radius: var(--rounded-box, 1rem);
	border-bottom-left-radius: var(--rounded-box, 1rem);
	border-top-left-radius: var(--rounded-box, 1rem);
	border-top-right-radius: var(--rounded-box, 1rem);
	--tw-bg-opacity: 1;
	background-color: var(--fallback-b1, oklch(var(--b1) / var(--tw-bg-opacity)));
	padding: 1.5rem;
	transition-property: color, background-color, border-color,
		text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter,
		backdrop-filter;
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
	transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
	transition-duration: 0.2s;
	box-shadow: #00000040 0 25px 50px -12px;
	overflow-y: auto;
	overscroll-behavior: contain;
}
.modal-action {
	display: flex;
	margin-top: 1.5rem;
	justify-content: flex-end;
}
.steps {
	display: inline-grid;
	grid-auto-flow: column;
	overflow: hidden;
	overflow-x: auto;
	counter-reset: step;
	grid-auto-columns: 1fr;
}
.tabs {
	display: grid;
	align-items: flex-end;
}
.tab {
	position: relative;
	grid-row-start: 1;
	display: inline-flex;
	height: 2rem;
	cursor: pointer;
	-webkit-user-select: none;
	user-select: none;
	-webkit-appearance: none;
	-moz-appearance: none;
	appearance: none;
	flex-wrap: wrap;
	align-items: center;
	justify-content: center;
	text-align: center;
	font-size: 0.875rem;
	line-height: 1.25rem;
	line-height: 2;
	--tab-padding: 1rem;
	--tw-text-opacity: 0.5;
	--tab-color: var(--fallback-bc, oklch(var(--bc) / 1));
	--tab-bg: var(--fallback-b1, oklch(var(--b1) / 1));
	--tab-border-color: var(--fallback-b3, oklch(var(--b3) / 1));
	color: var(--tab-color);
	padding-inline-start: var(--tab-padding, 1rem);
	padding-inline-end: var(--tab-padding, 1rem);
}
.tab:not(input):empty {
	cursor: default;
	grid-column-start: span 9999;
}
.toggle {
	flex-shrink: 0;
	--tglbg: var(--fallback-b1, oklch(var(--b1) / 1));
	--handleoffset: 1.5rem;
	--handleoffsetcalculator: calc(var(--handleoffset) * -1);
	--togglehandleborder: 0 0;
	height: 1.5rem;
	width: 3rem;
	cursor: pointer;
	-webkit-appearance: none;
	-moz-appearance: none;
	appearance: none;
	border-radius: var(--rounded-badge, 1.9rem);
	border-width: 1px;
	border-color: currentColor;
	background-color: currentColor;
	color: var(--fallback-bc, oklch(var(--bc) / 0.5));
	transition: background, box-shadow var(--animation-input, 0.2s) ease-out;
	box-shadow: var(--handleoffsetcalculator) 0 0 2px var(--tglbg) inset,
		0 0 0 2px var(--tglbg) inset, var(--togglehandleborder);
}
.btn:active:hover {
	animation: button-pop 0s ease-out;
	transform: scale(var(--btn-focus-scale, 0.97));
}
.btn:active:focus {
	animation: button-pop 0s ease-out;
	transform: scale(var(--btn-focus-scale, 0.97));
}
@supports not (color: oklch(0 0 0)) {
	.btn {
		background-color: var(--btn-color, var(--fallback-b2));
		border-color: var(--btn-color, var(--fallback-b2));
	}
	.btn-primary {
		--btn-color: var(--fallback-p);
	}
	.btn-secondary {
		--btn-color: var(--fallback-s);
	}
	.btn-accent {
		--btn-color: var(--fallback-a);
	}
}
.btn:focus-visible {
	outline-style: solid;
	outline-width: 2px;
	outline-offset: 2px;
}
.btn-primary {
	--tw-text-opacity: 1;
	color: var(--fallback-pc, oklch(var(--pc) / var(--tw-text-opacity)));
	outline-color: var(--fallback-p, oklch(var(--p) / 1));
}
@supports (color: oklch(0 0 0)) {
	.btn-primary {
		--btn-color: var(--p);
	}
	.btn-secondary {
		--btn-color: var(--s);
	}
	.btn-accent {
		--btn-color: var(--a);
	}
}
.btn-secondary {
	--tw-text-opacity: 1;
	color: var(--fallback-sc, oklch(var(--sc) / var(--tw-text-opacity)));
	outline-color: var(--fallback-s, oklch(var(--s) / 1));
}
.btn-accent {
	--tw-text-opacity: 1;
	color: var(--fallback-ac, oklch(var(--ac) / var(--tw-text-opacity)));
	outline-color: var(--fallback-a, oklch(var(--a) / 1));
}
.card:focus-visible {
	outline: 2px solid currentColor;
	outline-offset: 2px;
}
.card-title {
	display: flex;
	align-items: center;
	gap: 0.5rem;
	font-size: 1.25rem;
	line-height: 1.75rem;
	font-weight: 600;
}
.checkbox:focus {
	box-shadow: none;
}
.checkbox:focus-visible {
	outline-style: solid;
	outline-width: 2px;
	outline-offset: 2px;
	outline-color: var(--fallback-bc, oklch(var(--bc) / 1));
}
.checkbox:indeterminate {
	--tw-bg-opacity: 1;
	background-color: var(--fallback-bc, oklch(var(--bc) / var(--tw-bg-opacity)));
	background-repeat: no-repeat;
	animation: checkmark var(--animation-input, 0.2s) ease-out;
	background-image: linear-gradient(90deg, transparent 80%, var(--chkbg) 80%),
		linear-gradient(-90deg, transparent 80%, var(--chkbg) 80%),
		linear-gradient(
			0deg,
			var(--chkbg) 43%,
			var(--chkfg) 43%,
			var(--chkfg) 57%,
			var(--chkbg) 57%
		);
}
.checkbox:disabled {
	cursor: not-allowed;
	border-color: transparent;
	--tw-bg-opacity: 1;
	background-color: var(--fallback-bc, oklch(var(--bc) / var(--tw-bg-opacity)));
	opacity: 0.2;
}
.link:focus {
	outline: 2px solid transparent;
	outline-offset: 2px;
}
.link:focus-visible {
	outline: 2px solid currentColor;
	outline-offset: 2px;
}
.tab:focus {
	outline: 2px solid transparent;
	outline-offset: 2px;
}
.tab:focus-visible {
	outline: 2px solid currentColor;
	outline-offset: -5px;
}
.toggle:focus-visible {
	outline-style: solid;
	outline-width: 2px;
	outline-offset: 2px;
	outline-color: var(--fallback-bc, oklch(var(--bc) / 0.2));
}
.toggle:hover {
	background-color: currentColor;
}
.toggle:indeterminate {
	--tw-text-opacity: 1;
	color: var(--fallback-bc, oklch(var(--bc) / var(--tw-text-opacity)));
	box-shadow: calc(var(--handleoffset) / 2) 0 0 2px var(--tglbg) inset,
		calc(var(--handleoffset) / -2) 0 0 2px var(--tglbg) inset,
		0 0 0 2px var(--tglbg) inset;
}
.toggle-primary:focus-visible {
	outline-color: var(--fallback-p, oklch(var(--p) / 1));
}
.toggle-secondary:focus-visible {
	outline-color: var(--fallback-s, oklch(var(--s) / 1));
}
.toggle-accent:focus-visible {
	outline-color: var(--fallback-a, oklch(var(--a) / 1));
}
.toggle:disabled {
	cursor: not-allowed;
	--tw-border-opacity: 1;
	border-color: var(--fallback-bc, oklch(var(--bc) / var(--tw-border-opacity)));
	background-color: transparent;
	opacity: 0.3;
	--togglehandleborder: 0 0 0 3px var(--fallback-bc, oklch(var(--bc) / 1)) inset,
		var(--handleoffsetcalculator) 0 0 3px
			var(--fallback-bc, oklch(var(--bc) / 1)) inset;
}
.space-y-4 > :not([hidden]) ~ :not([hidden]) {
	--tw-space-y-reverse: 0;
	margin-top: calc(1rem * calc(1 - var(--tw-space-y-reverse)));
	margin-bottom: calc(1rem * var(--tw-space-y-reverse));
}
.rounded-box {
	border-radius: var(--rounded-box, 1rem);
}
.rounded-full {
	border-radius: 9999px;
}
.contents {
	display: contents;
}
.font-semibold {
	font-weight: 600;
}
.font-light {
	font-weight: 300;
}
.text-6xl {
	font-size: 3.75rem;
	line-height: 1;
}
.text-xl {
	font-size: 1.25rem;
	line-height: 1.75rem;
}
.m-4 {
	margin: 1rem;
}
.m-1 {
	margin: 0.25rem;
}
.my-4 {
	margin-top: 1rem;
	margin-bottom: 1rem;
}
.p-4 {
	padding: 1rem;
}
.p-2 {
	padding: 0.5rem;
}
.py-4 {
	padding-top: 1rem;
	padding-bottom: 1rem;
}
.shadow-2xl {
	--tw-shadow: 0 25px 50px -12px rgb(0 0 0/0.25);
	--tw-shadow-colored: 0 25px 50px -12px var(--tw-shadow-color);
	-webkit-box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),
		var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
	box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),
		var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.shadow {
	--tw-shadow: 0 1px 3px 0 rgb(0 0 0/0.1), 0 1px 2px -1px rgb(0 0 0/0.1);
	--tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color),
		0 1px 2px -1px var(--tw-shadow-color);
	-webkit-box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),
		var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
	box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),
		var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.w-80 {
	width: 20rem;
}
.w-52 {
	width: 13rem;
}
.w-full {
	width: 100%;
}
.w-10 {
	width: 2.5rem;
}
:root {
	--sky-50: #dff4fd;
	--sky-100: #b5e4f9;
	--sky-200: #8bd4f5;
	--sky-300: #62c5f1;
	--sky-400: #38b5ed;
	--sky-500: #0ea5e9;
	--sky-600: #0c87bf;
	--sky-700: #096a95;
	--sky-800: #074c6b;
	--sky-900: #042e41;
	--gray-50: #e7eaee;
	--gray-100: #cdd2da;
	--gray-200: #b3bbc6;
	--gray-300: #98a3b3;
	--gray-400: #7e8c9f;
	--gray-500: #64748b;
	--gray-600: #515e71;
	--gray-700: #3f4957;
	--gray-800: #2c333d;
	--gray-900: #191d23;
	--font-stack: Menlo, Monaco, Lucida Console, Liberation Mono, DejaVu Sans Mono,
		Bitstream Vera Sans Mono, Courier New, monospace, serif;
	--font-mono: Menlo, Monaco, Lucida Console, Liberation Mono, DejaVu Sans Mono,
		Bitstream Vera Sans Mono, Courier New, monospace, serif;
	--font-color: var(--gray-700);
	--background-color: #ffffff;
	--page-width: 680px;
	--page-space: 1rem;
}
body {
	color: var(--font-color);
	background-color: var(--background-color);
	padding: 0;
	margin: 0;
	width: 100vw;
	height: 100vh;
	overflow: hidden;
	display: flex;
	flex-direction: column;
}
.main {
	flex-grow: 1;
	position: relative;
	overflow: hidden;
}
.layer {
	position: absolute;
	top: 0;
	bottom: 0;
	right: 0;
	left: 0;
	overflow-x: hidden;
	overflow-y: auto;
}
.content {
	width: 100%;
	max-width: var(--page-width);
	margin-left: auto;
	margin-right: auto;
	padding: var(--page-space);
}
